---
title: "Layout's"
#author: "Nosotros"
#subtitle: | 
#  Viendo las posibilidades de Layout que tenemos en Quarto
description: |
  Viendo las posibilidades de Layout que tenemos en Quarto
author:
  - name: Pedro J. Pérez
    url: https://perezp44.github.io/pjperez.web/
    affiliation: Universitat de València
    affiliation-url: https://www.uv.es
    orcid: 0000-0001-9375-6330
date: 2022-11-01
categories: [Quarto, layout]
image: "./thumbnails/thumbnail_01.png"
title-block-banner: true #- {true, false }
draft: false
toc: true
toc-location: left
toc-depth: 3
#css: assets/my_css_file.css
#bibliography: references.bib
#nocite: |
#  @*
---



## Intro 

Además de yaml, texto y chunks, para escribir con Quarto **conviene conocer la estructura o layout de los artículos** que se generan con él. Las páginas tienen un body, un margin y un área para las sidebars, que en nuestro caso contiene un TOC^[Además, el layout puede venir afectado por la opción `page-layout: custom   #- {article, full, custom}`. Documentación oficial [aquí](https://quarto.org/docs/output-formats/page-layout.html) ].  Documentación oficial [aquí](https://quarto.org/docs/authoring/article-layout.html).

Usando [divs y spans](https://quarto.org/docs/authoring/markdown-basics.html#divs-and-spans) podemos añadir clases y atributos, haciendo que determinados elementos de nuestro documento cambien sus "propiedades". En esta sección usaremos divs para hacer que determinadas partes de nuestro post se ajusten a distintos layout's.


## Ejemplo (con imágenes)

Para ver las distintas posibilidades que tenemos, **insertaremos una imagen** ocupando distintas áreas del artículo. Empezaremos situando la imagen en el margen. para ello habría que hacer lo siguiente: 

```
::: {.column-margin}

![](imagenes/my_layout-01.png){fig-align="center"}

:::
```

::: {.column-margin}
![](imagenes/my_layout-01a.png){fig-align="center"}
:::

:::{.column-body}
![](imagenes/my_layout-02a.png){fig-align="center"}
:::



:::{.column-body-outset}
![](imagenes/my_layout-03.png){fig-align="center"}
:::


:::{.column-page-inset}
![](imagenes/my_layout-04.png){fig-align="center"}
:::


:::{.column-page}
![](imagenes/my_layout-05.png){fig-align="center"}
:::


::: {.column-screen-inset}
![](imagenes/my_layout-06.png){fig-align="center"}
:::


::: {.column-screen}
![](imagenes/my_layout-07.png){fig-align="center"}
:::


Si queremos podemos llegar a ocupar el 100% de la pantalla. Sólo habría que indicarlo en las opciones de la imagen con `width="100%"`.

::: {.column-screen}
![](imagenes/my_layout-08.png){fig-align="center" width="100%"}
:::


<br>

## Ejemplo (con chunks)


El output de los chunks también puede ocupar distintas áreas. Veamos  si un leaflet se puede poner en el margen:


```{r}
#| column: margin
#| echo: fenced
library(leaflet)
leaflet() %>%
  addTiles() %>%  # Add default OpenStreetMap map tiles
  addMarkers(lng = -4.7880, lat = 37.885, popup = "Rectorado de la Universidad de Córdoba\n (Sede de las XII Jornadas de usuarios de R)")
```

<br>

Y ahora ocupando toda la pantalla:

```{r}
#| column: screen
#| echo: fenced
library(leaflet)
leaflet() %>%
  addTiles() %>%  # Add default OpenStreetMap map tiles
addMarkers(lng = -4.7880, lat = 37.885, popup = "Rectorado de la Universidad de Córdoba\n (Sede de las XII Jornadas de usuarios de R)")
```



<br>

Como no puede ser de otro modo, aún hay más opciones para el layout. Documentación [aquí](https://quarto.org/docs/authoring/article-layout.html#overflowing-content)

<br>

## Layout de las páginas

Además, para el layout de toda la página tienes las opciones [aquí](https://quarto.org/docs/output-formats/page-layout.html#overview). Si quieres crear un "custom layout" quizás tengas que usar [Bootstrap CSS grid](https://getbootstrap.com/docs/5.1/layout/css-grid/).

