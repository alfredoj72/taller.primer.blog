{
  "hash": "17a2fdf51fc3a6d7834997494c0a9f9f",
  "result": {
    "markdown": "---\ntitle: \"Más elementos (WIP)\"\n#subtitle: \"(9ª parte del taller [Mi primer blog con Quarto](https://perezp44.github.io/taller.primer.blog/))\"\n#author: \"Nosotros\"\n#subtitle: | \n#  Viendo las posibilidades de Layout que tenemos en Quarto\ndescription: |\n  Algunos elementos más de Quarto para escribir artículos o posts.\nauthor:\n  - name: Pedro J. Pérez\n    affiliation: Universitat de València\ndate: 2022-10-26\ncategories: [Quarto, más elementos, ejemplos]\nimage: \"./thumbnails/thumbnail_00.png\"\ntitle-block-banner: true #- {true, false }\ndraft: false\ntoc: true\ntoc-location: left\ntoc-depth: 3\nfilters:\n   - lightbox\n#css: assets/my_css_file.css\n#bibliography: references.bib\n#nocite: |\n#  @*\n---\n\n\n<!--This is a comment. Comments are not displayed in the browser-->\n\n<br>\n\nEn este tutorial sirve de plantilla para ir escribiendo un post que contenga distintos elementos disponibles en Quarto para escribir con archivos `.qmd`.\n\n--------------------------------------------------------------------------------\n\n\n\n## Callouts\n\nDocumentación [aquí](https://quarto.org/docs/authoring/callouts.html)\n\n\n:::: panel-tabset\n#### Para hacer esto ...\n\n::: {.callout-important icon=\"false\"}\n#### Tarea xx\n- Tendremos que hacer esto \n\n- y esto otro\n:::\n\n#### Has de escribir\n\n``` markdown\n::: {.callout-important icon=\"false\"}\n\n#### Tarea xx\n- Tendremos que hacer esto \n\n- y esto otro\n:::\n```\n\n::::\n\n\n\n\n\n## Tablas\n\n<https://quarto.org/docs/authoring/tables.html>\n\n#### Editor visual\n\n<https://www.rstudio.com/blog/exploring-rstudio-visual-markdown-editor/>\n\n<br>\n\n## Divs y Spans\n\nEn los documentos creados con Quarto, se pueden usar [Pandoc Divs and Spans](https://quarto.org/docs/authoring/markdown-basics.html#divs-and-spans) para agregar clases, atributos y otros identificadores a trozos de contenido. Por ejemplo, podemos agregar un borde alrededor del texto usando un `Div`:\n\n\n::: {.border}\nThis content can be styled with a border\n:::\n\n\n\n<br>\n\n## Bibliografía\n\nPara aprender puedes ir a [este Quarto tip](https://mine-cetinkaya-rundel.github.io/quarto-tip-a-day/posts/24-citations/), a  [este video](https://youtu.be/d8jSN998Mtw?t=3757). La documentación oficial está [aquí](https://quarto.org/docs/authoring/footnotes-and-citations.html) y [aquí](https://quarto.org/docs/visual-editor/technical.html#citations) para usar el editor visual.\n\n\n## Shortcode (Include)\n\nLo he usado mucho en el taller, concretamente para reusar trozos en los tutoriales y en las slides y tenerlos sincronizados.\n\nLo explica Mine [aquí](https://mine-cetinkaya-rundel.github.io/quarto-tip-a-day/posts/04-include/)\n\nDocumentación oficial [aquí](https://quarto.org/docs/extensions/shortcodes.html). Shortcodes are a type of [Quarto extension](https://quarto.org/docs/extensions/)\n\n- Además, tanbien se puede hacer que determinado contenido se muestro sólo si el formato de salida es de un determinado tipo. Lo vi [aquí]()\n\n```md\n::: {.content-visible when-format=\"html\"}\nWill only appear in HTML.\n:::\n```\n\n<br>\n\n## Incrustar una web\n\n\n````md\n```{=html}\n<iframe width=\"600px\" height=\"400px\" style=\"border:2px solid #dee2e6;\" src=\"https://quarto.org/docs/guide/\"></iframe>\n```\n````\n\n\n```{=html}\n<iframe width=\"600px\" height=\"400px\" style=\"border:2px solid #dee2e6;\" src=\"https://quarto.org/docs/guide/\"></iframe>\n```\n\n\n<br>\n\n\n## Más cosas\n\n- [Shinylive](https://quarto.org/docs/blog/posts/2022-10-25-shinylive-extension/): incorporar un shiny (hecho con Phyton) sin necesidad de servidor.\n\n- Para convertir ficheros `.Rmd` a `wmd` puedes usar `knitr::convert_chunk_header()`\n\n\n- Documentos **self-contained** se hacen ahora con:\n\n\n```yaml\n#- sel-contained se hace ahora con:\n\nformat:\n  html:\n  embed-resources: true\n```\n### Inline code\n\nPara escribir código entrelazado con el texto tienes que ponerlo dentro de estas marcas: `` `r ` ``. Por ejemplo, si escribes:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nEl data.frame iris tiene `r nrow(iris)` filas `r ncol(iris)` columnas.\n```\n:::\n\n\nSe verá así: El data.frame iris tiene 150 filas 5 columnas.\n\n### Divs\n\n``` markdown\n[This is *some text*]{.class key=\"val\"}\n```\n\n\n###  Border\n\n::: {.border}\nThis content can be styled with a border\n\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}