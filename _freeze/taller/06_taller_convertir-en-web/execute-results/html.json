{
  "hash": "11eef0752042c38a257aff532de82a58",
  "result": {
    "markdown": "---\ntitle: \"Convertir el blog en web académica\"\nsubtitle: \"(6ª parte del taller [Mi primer blog con Quarto](https://perezp44.github.io/taller.primer.blog/))\"\n#title-block-banner: imagenes/economia.gif\ntoc-title: Tutorial nº 6\n---\n::: {.callout-note collapse=\"true\" appearance=\"default\" icon=\"false\"}\n#### Contexto\n\n-  Tutorial preparado para el taller **Mi primer blog con Quarto** impartido en Córdoba (Spain) durante el [I Congreso & XII Jornadas de Usuarios de R](http://r-es.org/12jr/), 23-25 de noviembre de 2022.\n-   El taller está pensado para realizar con [R](https://cran.r-project.org/). Se utilizará el IDE [RStudio](https://www.rstudio.com/products/rstudio/) y [Quarto](https://quarto.org/). Se recomienda tener instaladas **versiones recientes** de los 3 programas\n\n- Este tutorial es sólo una parte del taller. El **taller completo** está [aquí](https://perezp44.github.io/taller.primer.blog/).\n:::\n\n\n\n::: {.callout-note collapse=\"true\" appearance=\"default\" icon=\"false\"}\n## Recapitulación\n\n-   En esta quinta parte del taller veremos como escribir nuestros posts con Quarto.\n\n-   Las anteriores secciones del taller son:\n\n    1. **Intro**: se presenta el taller\n\n    2. **Creación de un blog (básico) con Quarto**: vimos como crear y alojar un **blog básico** con RStudio y Quarto.\n    \n    3. **Tuneado básico del blog**: modificamos ligeramente los ficheros `_quarto.yml`, `index.qmd`, `about.qmd` y `styles.css`.\n    \n    4. **Workflow: ¿cómo crear un post?**: vimos como generar nuevos posts para nuestro blog.\n    \n    5. **Escribiendo con Quarto**: repasamos las princiaples poisbilidades que nos ofrece Quarto para escribir (en este caso posts)\n:::\n\n------------------------------------------------------------------------\n\n<br>\n\n::: {.callout-tip  appearance=\"default\" icon=\"false\"}\n## ¿Qué haremos en este tutorial?\n\n- Convertir nuestro blog en una web \"académica\".\n\n- Para ello solo tendremos que cambiar el nombre de dos ficheros y referenciar uno de ellos en `_quarto.yml`.\n\n:::\n\n## Intro \n\nVamos a transformar nuestro blog en una **página web personal con blog**. Lo único que tendremos que hacer será que la \"landing page\" o Home de  nuestra web no sea una página con el listado de posts, si no que sea una página en la que se reciba a los futuros visitantes de nuestra web: lo normal es presentarnos y darles la bienvenida.\n\n<br>\n\n## Proceso\n\n::: {.callout-important icon=\"false\"}\n#### Tarea 1: Renombrar el archivo index.qmd\n\n- Cambia el nombre del fichero `index.qmd` a `blog.qmd`\n\n- Ahora este archivo no está referenciado en `_quarto.yml`, por lo que no se mostraría si hacemos un rebuild^[Además, como nuestro Qproject ahora no tiene fichero `index.qmd` el rebuild no funcionaría].\n\n:::\n\n<br>\n\n::: {.callout-important icon=\"false\"}\n#### Tarea 2: Incluir `blog.qmd` en la web\n\n- Para que `blog.qmd`, la página que contiene el listado de posts, se muestre en nuestra web hay que refrenciarlo/incluirlo en `_quarto.yml`\n\n- Antes del tutorial 5 la sección de `_quarto.yml` que hacía referencia a la estructura de la web tenía esta pinta: \n\n\n::: {.cell}\n\n```{.r .cell-code .code-overflow-wrap  code-line-numbers=\"true\"}\n#- 2/ Opciones referentes a la estructura de la web -----------------\n\nwebsite:\n  title: \"Mi blog (aún en pruebas)\"\n  navbar:\n    logo: \"profile.jpg\"\n    right:\n      - text: \"About me\"\n        href: about.qmd\n      - icon: github\n        href: https://github.com/<tu-usuario-github>\n      - icon: twitter\n        href: https://twitter.com/<tu-usuario twitter>\n      - icon: envelope\n        url: \"mailto:<tu-mail@uv.es>\"\n    left: \n      - text: \"Docencia\"\n        href: docencia.qmd\n```\n:::\n\n\n- Simplemente, tendríamos que modificar las lineas 8 y 9 que ahora están refrenciando al fichero `about.qmd`. Por ejemplo podríamos dejar las lineas 8 y 9 como se ve abajo:\n\n\n\n::: {.cell}\n\n```{.r .cell-code .code-overflow-wrap  code-line-numbers=\"true\"}\n#- 2/ Opciones referentes a la estructura de la web -----------------\n\nwebsite:\n  title: \"Mi blog (aún en pruebas)\"\n  navbar:\n    logo: \"profile.jpg\"\n    right:\n      - text: \"Mi blog\"\n        href: blog.qmd\n      - icon: github\n        href: https://github.com/<tu-usuario-github>\n      - icon: twitter\n        href: https://twitter.com/<tu-usuario twitter>\n      - icon: envelope\n        url: \"mailto:<tu-mail@uv.es>\"\n    left: \n      - text: \"Docencia\"\n        href: docencia.qmd\n```\n:::\n\n\n<br>\n\n- Aún no podemos refrescar la web porque ahora no tenemos archivo `index.qmd`. \n\n\n:::\n\n\n<br>\n\n::: {.callout-important icon=\"false\"}\n#### Tarea 3: Renombrar el archivo about.qmd\n\n- Cambia el nombre del fichero  `about.qmd` a `index.qmd`, con lo que pasará ser nuestra \"landing page\". \n\n- Como el antiguo fichero `about` contenía nuestra foto parece que es un buen candidato a ser nuestra \"Home\"\n\n\n:::\n\n<br>\n\n\n::: {.callout-important icon=\"false\"}\n#### Tarea 4: Hacemos un rebuild de la web\n\n- Ahora ya tenemos fichero `index.qmd`, por lo que ya podemos hacer un rebuild de nuestra web y veremos la nueva estructura de nuestra web, con una foto nuestra en la \"landing page\".\n\n- Para ello: `Build > Render Website` en RStudio.\n\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}