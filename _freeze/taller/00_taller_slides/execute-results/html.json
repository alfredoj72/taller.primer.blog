{
  "hash": "365d755d685242d47610add3d465c7cd",
  "result": {
    "markdown": "---\ntitle: \"Mi primer blog con Quarto [(y Rmd)]{.fragment  .strike}\"\ndate: 2022-11-24  #- ISO8601 YYYY-MM-DD format \ndate-format: short\nformat: \n  revealjs:\n    scrollable: true\n    slide-level: 2\n    height: 900\n    width: 1600\n    toc: false\n    from: markdown+emoji  #- usar emojis https://gist.github.com/rxaviers/7360908)\n    center-title-slide: true\n    title-slide-attributes: #- atributos para la slide de titulo\n      data-background-color: \"#562457\"   #- color de R-ladies\n      #data-background-image: /imagenes/economia.gif\n      #data-background-size: contain      \n    preview-links: auto  #- true: abre un iframe en lugar de abrir ventana\n    #multiplex: true  #- para que puedas manejar las slides del publico\n    link-external-newwindow: true\n    transition: fade\n    #height: 900\n    #width: 1600\n    fontcolor: \"#262d36\"\n    highlight-style: a11y\n    code-line-numbers: true\n    number-sections: false\n    slide-number: c/t   # https://pandoc.org/MANUAL.html#structuring-the-slide-show\n    incremental: false   # https://quarto.org/docs/presentations/#incremental-lists\n#logo: imagenes/economia.gif\nfooter: |\n        Slides hechas con [Quarto](https://quarto.org/) para las [XII Jornadas de Usuarios de R](http://r-es.org/12jr/)\n    #theme: [moon, custom.scss]\nrevealjs-plugins:\n  - pointer\ncss: assets/styles_slides.intro.css\n---\n\n\n# Bienvenidos al taller!! :vulcan_salute::rose: {background-color=\"#abd2d6\"}\n\n------------------------------------------------------------------------\n\n## Sobre mi (Pedro J. Pérez) {background-color=\"#abd2d6\"}\n\n<br>\n\n-   Profesor en la UV: [Econometría](https://perezp44.github.io/web.Econometria.GADE/) e [Intro a la Ciencia de datos con R](https://perezp44.github.io/intro-ds-22-23-web/)\n\n-   Entusiasta de R\n\n<br>\n\n. . .\n\n-   No soy \"bloguero\", más bien soy creador y **liquidador de blogs**:\n\n    -   [2015, R & flowers](http://perezp44.github.io/) , con Jekyll\n    -   [2018, R & flowers V](https://rflowers5.netlify.app/), con Hugo y blogdown\n    -   [2020, R & flowers (o casi)](https://perezp44.github.io/my_blog_R-flowers-0.1.3/), con radix\n    -   [2021, pedro.j.perez blog's](https://perezp44.github.io/pjperez.web/), con Distill\n    -   [2022, R & flowers](https://perezp44.github.io/pjperez.blog.2022/), con Quarto\n\n# Intro {background-color=\"#b8c2aa\"}\n\n## Estructura del taller {.smaller}\n\n<br>\n\n0.  **Intro**: presentación del taller, visionado de blogs y **¿qué es Quarto?** (15 min)\n\n<br>\n\n. . .\n\n1.  Creación de un blog básico: mi blog en 3 minutos (10 min)\n\n2.  **Tuneado básico** del blog (15 min). **Práctica** (15 min)\n\n3.  Convirtiendo el blog en una **web personal** (5 min)\n\n<br>\n\n. . .\n\n4.  Workflow: **creando posts** (5 min)\n\n5.  **Escribiendo** un post **con Quarto** (15 min). **Práctica** (15 min)\n\n<br>\n\n. . .\n\n6.  Tuneado: **mejorando la web** (14 min)\n\n. . .\n\n7.  Gestión y **publicación** de la web/blog (1 min)\n\n## Objetivo(s) del taller\n\n<br>\n\n::: incremental\n-   Aprender a **hacer websites/blogs con Quarto**\n\n<br>\n\n-   **Aprender sobre Quarto** mientras vamos creando una web/blog\n\n<br>\n\n-   Que salgáis todos con el bosquejo y la **intención de hacer** una web/blog!!\n\n<br>\n\n-   ... y, si puede ser, **pasar un buen rato** :slightly_smiling_face: mientras aprendemos\n:::\n\n## Beneficios de tener un blog {.smaller}\n\n<br>\n\n-   **Se aprende mucho!!**\n\n. . .\n\n-   Es **fácil** (pocas barreras de entrada si usas Rmarkdown)\n\n-   Es **divertido**\n\n. . .\n\n-   Registrar análisis que haces que de otra forma olvidarías\n\n-   Portafolio y contactos\n\n. . .\n\n-   Productive procrastination (!!)\n\n. . .\n\n(Discursos más elaborados [aquí](https://www.rebeccabarter.com/blog/2020-02-03_blogger/) o [aquí](https://jozef.io/r914-one-year-r-blogging/) )\n\n. . .\n\n<br>\n\n### **Importante:**\n\n-   El blog **no tiene que ser perfecto**. Mejor empezar con un blog sencillo\n\n. . .\n\n-   Los posts **tampoco tienen porqué estar perfectos**, así que no hay que tener miedo a escribir!!\n\n## Estructura de una web { .unnumbered background-color=\"#C5B38F\" title-align=\"center\"}\n\n\n::: {columns}\n\n::: {.column width=\"69%\"}\n![](imagenes/img_final.png)\n:::\n\n\n\n::: {.column width=\"30%\"}\n\n\n**HEADER/Navbar**\n\n<br>\n\n**TITLE-block banner**\n\n<br><br><br>\n\n[**ARTICLE**]{.purple}\n\n<br><br><br><br>\n\n**Footer**\n\n:::\n\n:::\n\n\n\n## Ejemplos de blogs (hechos con Quarto) {.smaller}\n\n-   [Mike Mahoney](https://www.mm218.dev/blog.html) (el repo [aqui](https://github.com/mikemahoney218/mm218.dev))\n\n-   [Isabella Velásquez](https://ivelasq.rbind.io/about.html) (el repo [aqui](https://github.com/ivelasq/pipedream))\n\n-   [Danielle Navarro](https://blog.djnavarro.net/) (el repo [aqui](https://github.com/djnavarro/quarto-blog))\n\n-   [Jeff y Marc Dotson](https://occasionaldivergences.com/) (el repo [aqui](https://github.com/marcdotson/occasional-divergences))\n\n-   [Layton R blog](https://graphdr.github.io/data-stories/) (el repo [aqui](https://github.com/graphdr/data-stories))\n\n-   [R Lille](https://rlille.fr/) (el repo [aqui](https://github.com/RLille/rlille.fr))\n\n-   [Drew Dimmery](https://ddimmery.com/)\n\n-   [PA blog](https://www.paltmeyer.com/blog/) (el repo [aqui](https://github.com/pat-alt/pat-alt.github.io))\n\n-   [Mario Angst](https://marioangst.com/en/)\n\n-   [Matt Worthington](https://www.mrworthington.com/) (el repo [aqui](https://github.com/mrworthington/mrworthington.github.io))\n\n<br>\n\n#### Más opciones:\n\n-   La [Gallery de Quarto](https://quarto.org/docs/gallery/#websites)\n\n# ¿Qué es Quarto? {background-color=\"#b8c2aa\"}\n\n\n> Quarto is a multi-language, next generation version of R Markdown, with many new features and capabilities.\n\n. . .\n\n\n<br>\n\nPuedes ver [este video](https://www.youtube.com/watch?v=_20US068pzk) de 100 segundos\n\n## ¿Qué es Quarto?\n\n<br>\n\n. . .\n\n-   Un **nuevo sistema de publicación científica y técnica** de código abierto basado en Pandoc\n\n. . .\n\n-   Muy **parecido a Rmarkdown**, pero ... **no requiere R**. Soporta lenguajes como Phyton, Julia y Observable.\n\n. . .\n\n-   **Unifica funcionalidades** de varios paquetes del entorno Rmd como xaringan, bookdown, blogdown , ...\n\n-   Es ... la \"**segunda generación de Rmarkdown**\"\n\n-   Quarto utiliza Knitr para ejecutar el código R; así que es **capaz de procesar también los ficheros .Rmd** sin modificarlos\n\n. . .\n\n<br>\n\n-   Quarto no es un paquete, **es un programa independiente**, un CLI\n\n## Ventajas de Quarto\n\n-   Proyecto en [desarrollo activo](https://quarto.org/docs/download/) ... mientras que Rmarkdown [it's not going away](https://yihui.org/en/2022/04/quarto-r-markdown/) pero ...\n\n-   **Unifica** algunas de las funcionalidades de Rmarkdown\n\n-   **Por ejemplo**: Cross references, Call-outs, Advanced Layout (tb para imágenes), Extensiones, Interactividad, YAML inteligence, Quarto Pub, Divs, Spans\n\n. . .\n\n-   Para ver si estas ventajas merecen la pena para ti puedes leer a [Occasional Divergences](https://occasionaldivergences.com/posts/quarto-questions/#what-are-the-benefits-of-using-quarto-for-_____), [Nick Tierney](https://www.njtierney.com/post/2022/04/11/rmd-to-qmd/), [Alison Hill](https://www.apreshill.com/blog/2022-04-we-dont-talk-about-quarto/), [Danielle Navarro](https://blog.djnavarro.net/posts/2022-04-20_porting-to-quarto/), o [esta pregunta](https://stackoverflow.com/questions/72089640/what-are-the-benefits-of-using-quarto-over-rmarkdown) de Stack Overflow.\n\n. . .\n\n::: {.smaller width=\"67%\"}\n\n{{< tweet user=DanOvand0 id=1580343517154770944 >}}\n\n\n:::\n\n# Setup para el taller {background-color=\"#d6d2ab \"}\n\n<br>\n\n. . .\n\n-   Vamos a trabajar con R (a través de RStudio) y Quarto\n\n-   Si tienes RStudio 2022.07.1 +, ya tienes Quarto instalado\n\n-   Instrucciones de instalación [aquí](https://perezp44.github.io/taller.primer.blog/setup.html).\n\n-   Para **descargar Quarto** puedes ir [aquí](https://quarto.org/docs/get-started/).\n\n<br>\n\n. . .\n\nEl taller está diseñado **suponiendo que conocéis/usáis Rmarkdown**\n\n# Refresh de Rmarkdown (`.Rmd`) {background-color=\"#b8c2aa\"}\n\n------------------------------------------------------------------------\n\n### ¿Qué es Rmarkdown? ¿Para qué sirve?\n\n. . .\n\n-   Un [\"entorno\"](https://vimeo.com/178485416) para hacer informes/publicaciones/transparencias **REPRODUCIBLES** con R.\n\n> Is an authoring framework for data science, combining your code, its results, and your prose. R Markdown documents are fully reproducible and support dozens of output formats, like PDFs, Word files, slideshows, and more.\n\n. . .\n\n-   Con Rmd se pueden generar **multitud de outputs**. Por ejemplo, visita [está galería](https://rmarkdown.rstudio.com/gallery.html) o [este listado](https://rmarkdown.rstudio.com/formats.html)\n\n<br>\n\n. . .\n\n#### Una oda a Rmarkdown\n\n-   [How Rmarkdown changed my life](https://www.youtube.com/watch?v=_D-ux3MqGug&list=PLXKlQEvIRus-qu1hjc8SyElSamAcT-KaE&index=6): charla de Rob Hyndman sobre su proceso hasta llegar a usar Rmarkdown para hacer sus documentos científicos y webs.\n\n------------------------------------------------------------------------\n\n## Documentos `.Rmd` tienen 3 partes {.smaller}\n\n1.  Encabezamiento (yaml header)\\\n2.  Trozos de código R (R chunks)\\\n3.  Texto (narratives)\n\n. . .\n\n### Un ejemplo\n\n::: {columns}\n::: {.column width=\"40%\"}\n#### source code\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](imagenes/tt_01/ejemplo_1.png){fig-align='center' width=90%}\n:::\n:::\n\n:::\n\n::: {.column width=\"40%\"}\n#### output\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](imagenes/tt_01/ejemplo_1b.png){fig-align='center' width=100%}\n:::\n:::\n\n:::\n:::\n\n------------------------------------------------------------------------\n\n##### (I) El encabezamiento o \"yaml header\"\n\n-   Se (suele) poner al ppio del documento, entre estas marcas: **`---`**\n\n-   En el yaml son MUY importantes los **espacios y la indentación**\n\n-   Puedes aprender más sobre el `yaml` en el [manual de Pandoc](https://pandoc.org/MANUAL.html)\n\n##### Otro ejemplo de yaml\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](imagenes/tt_01/ejemplo_yaml.png){fig-align='center' width=80%}\n:::\n:::\n\n\n------------------------------------------------------------------------\n\n### (IIa) Código R (chunks)\n\n-   Para que `knitr` sepa qué partes del .Rmd es código R, deben ir dentro de estas marcas:\n\n![](./imagenes/tt_01/img_01_dd.png){fig-align=\"left\" width=\"15%\"}\n\n-   Por ejemplo:\n\n![](./imagenes/tt_01/img_01_ee.png){fig-align=\"left\" width=\"30%\"}\n\n-   Cuando `knitr` procese el chunk, lo interpretará como código R y **ejecutará las instrucciones y mostrará en el documento final el output** generado por el chunk.\n\n![](./imagenes/tt_01/img_01_ee_02.png){fig-align=\"center\" width=\"90%\"}\n\n------------------------------------------------------------------------\n\n### (IIb) Chunks: diferencias con Quarto\n\n-   Ahora se usa **YAML** style (`echo: false`).\n\n-   **Cada opción va en una linea** que empieza por el \"hash pipe\": `#|`\n\n::: columns\n::: {.column width=\"46%\"}\n#### .Rmd\n\n![](./imagenes/tt_01/img_01_ff.png){fig-align=\"left\" width=\"100%\"}\n:::\n\n::: {.column width=\"46%\"}\n##### .qmd\n\n![](./imagenes/tt_01/img_01_gg.png){fig-align=\"left\" width=\"100%\"}\n:::\n:::\n\n------------------------------------------------------------------------\n\n### (IIc) Chunks: diferencias con Quarto\n\n-   **No hace falta chunk inicial**: con Quarto se pueden poner **las opciones de chunk en el YAML**\n\n::: columns\n::: {.column width=\"46%\"}\n#### .Rmd\n\n![](./imagenes/tt_01/img_01_h1.png){fig-align=\"left\" width=\"100%\"}\n:::\n\n::: {.column width=\"46%\"}\n##### .qmd\n\n![](./imagenes/tt_01/img_01_h2.png){fig-align=\"left\" width=\"100%\"}\n:::\n:::\n\n------------------------------------------------------------------------\n\n## (III) Texto (narrativa)\n\n-   Todo lo que no es `YAML` o `CHUNKS` de código, es **TEXTO**.\n\n-   El texto **se escribe en Markdown** (concretamente en Pandoc's Markdown)\n\n<br>\n\n### Sintaxis básica de `markdown`\n\n-   [Aquí](https://quarto.org/docs/authoring/markdown-basics.html) puedes ver (o recordar) la sintaxis básica para escribir en `markdown`. Como ejemplo:\n\n::: { layout-ncol=1}\n\n![](./imagenes/tt_01/img_20_markdown.png){fig-align=\"center\"  width=\"100%\"}\n\n:::\n\n\n\n------------------------------------------------------------------------\n\n### Cuando tengáis tiempo mirad este Workshop sobre Quarto. Awesome!!\n\n\n{{< youtube yvi5uXQMvu4 >}}\n\n\n\n# Comenzamos el taller !!!! :computer::crossed_fingers: 💪🏼 💪🏼    {background-color=\"#b8c2aa\"}\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}