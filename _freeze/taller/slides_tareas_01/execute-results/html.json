{
  "hash": "955682f5aba4d02802361f356e84a486",
  "result": {
    "markdown": "---\ntitle: \"Mi primer blog con Quarto\"\nsubtitle: \"(Slides para el taller)\"\ndate: 2022-11-24  #- ISO8601 YYYY-MM-DD format \ndate-format: short\nformat: \n  revealjs:\n    #logo: .png\n    #smaller: true\n    scrollable: true\n    slide-level: 2\n    height: 900\n    width: 1600\n    toc: false\n    from: markdown+emoji  #- usar emojis https://gist.github.com/rxaviers/7360908)\n    center-title-slide: true\n    title-slide-attributes: #- atributos para la slide de titulo\n      data-background-color: \"#562457\"   #- color de R-ladies\n      #data-background-image: /imagenes/economia.gif\n      #data-background-size: contain      \n    preview-links: auto  #- true: abre un iframe en lugar de abrir ventana\n    #multiplex: true  #- para que puedas manejar las slides del publico\n    link-external-newwindow: true\n    transition: fade\n    #height: 900\n    #width: 1600\n    fontcolor: \"#262d36\"\n    highlight-style: a11y\n    code-line-numbers: true\n    number-sections: false\n    slide-number: c/t   # https://pandoc.org/MANUAL.html#structuring-the-slide-show\n    incremental: false   # https://quarto.org/docs/presentations/#incremental-lists\n#logo: imagenes/economia.gif\ncss: /assets/styles_slides_tareas.css\nrevealjs-plugins:\n  - pointer\n---\n\n\n::: {.callout-note collapse=\"true\" appearance=\"default\" icon=\"false\"}\n#### Contexto\n\n-   El taller está pensado para realizar con [R](https://cran.r-project.org/). Se utilizará el IDE [RStudio](https://www.rstudio.com/products/rstudio/) y [Quarto](https://quarto.org/). Se recomienda tener instaladas **versiones recientes** de los 3 programas\n:::\n\n<br>\n\n::: {.callout-warning collapse=\"false\" appearance=\"default\" icon=\"false\"}\n\n#### Hay 3 formas de seguir el tutorial\n\nA) La forma recomendada: utilizando Quarto a través de **RStudio**\n\nB) Utilizar Quarto desde la **Terminal** y usar tu editor favorito (VScode ...)\n\nC) Utilizar **RStudio Cloud**\n:::\n\n\n\n<br>\n\n# 1. Creación de un blog básico con Quarto {background-color=\"#EEBF8B\"}\n\n(1ª parte del tutorial)\n\n::: {.callout-tip collapse=\"false\" appearance=\"default\" icon=\"false\"}\n## ¿Qué haremos en este tutorial?\n\n- Veremos de forma rápida el  **proceso de creación** y la **estructura de ficheros** de un blog creado con Quarto. La documentación oficial está [aquí](https://quarto.org/docs/websites/website-blog.html).\n\n- Alojaremos el blog en [Quarto Pub](https://quartopub.com). \n\n- Será un blog básico pero completamente operativo. Ya tendremos tiempo de mejorarlo, o tunearlo, en las siguientes secciones del taller.\n:::\n\n\n\n------------------------------------------------------------------------\n\n::: {.callout-important icon=\"false\"}\n#### Tarea 1.1: Hemos de crear la carpeta que contendrá nuestro blog. \n\n**La carpeta la creará Quarto, pero tenemos 3 formas de hacerlo**:\n\n<br>\n\n###### A) Crear la carpeta (o Qproject) desde **RStudio**\n\n-   En RStudio sigue la siguiente ruta de menús:   \n\n    `File > New Project > New Directory > Quarto Blog`\n    \n-   Mejor si llamas a la carpeta:  `blog_prueba_00`\n\n\n\n<br>\n\n###### B) Crear la carpeta desde la **Terminal**\n\n\n- Has de ejecutar desde la Terminal:\n\n\n  ::: {.cell}\n  \n  ```{.bash .cell-code  code-line-numbers=\"false\"}\n  quarto create-project blog_prueba_00 --type website --template blog         \n  ```\n  :::\n\n<br>\n\n###### C) Usando un Qproject ya creado con **RStudio Cloud**\n\n- Tienes que ir [aquí](https://rstudio.cloud/content/4743159). Se abrirá Rstudio en el navegador con un Qproject llamado `blog_prueba_00`.\n\n- Has de tener cuenta en [RStudio Cloud](https://rstudio.cloud/). Haz una copia permanente y trabaja sobre ella\n\n<br>\n\nDe cualquiera de las 3 maneras **acabaremos teniendo una carpeta con todo o necesario para crear un blog**.\n:::\n\n\n\n\n------------------------------------------------------------------------\n\n## Contenido del Qproject\n\n::: { layout-ncol=1}\n![](./imagenes/tt_01/img_01.png){fig-align=\"center\" width=\"75%\"}\n\n:::\n\n\n\nLos **archivos importantes** ahora son 3:\n\n-   `_quarto.yml`: especifica la estructura (y apariencia) de la web\n\n-   `index.qmd` : generará (y dará formato) a la \"landing page\" o Home. Esta página será un listado de páginas (un blog)\n\n-   `about.qmd` : una de la páginas del blog\n\n<br>\n\n------------------------------------------------------------------------\n\n::: {.callout-important icon=\"false\"}\n#### Tarea 1.2: Generación del blog\n\n-   Ir al cuadrante superior-derecha de RStudio, pinchar en la pestaña `Build` y pinchar en `Render Website`.\n\n- De esta forma, se procesarán los archivos del Qproject y se creará el blog.\n\n- Podremos verlo en el cuadrante inferior-derecha de RStudio, concretamente en la pestaña `Viewer`.\n:::\n\n\n::: {.callout-warning collapse=\"true\" appearance=\"default\" icon=\"false\"}\n#### Extensiones: formas alternativas de generar el blog\n\n- También podríamos haber generado el blog usando la Consola o la **Terminal** desde RStudio. \n\n- En ambos casos hay que estar en el Qproject \"blog_prueba_00\"; es decir, \"blog_prueba_00\" es el working directory\n\n- Desde la **Terminal**\n\n  ::: {.cell}\n  \n  ```{.bash .cell-code  code-line-numbers=\"false\"}\n  quarto render        \n  ```\n  :::\n  \n- desde la **Consola** de R\n\n\n  ::: {.cell}\n  \n  ```{.r .cell-code  code-fold=\"false\" code-line-numbers=\"false\"}\n  install.packages(\"quarto\")    \n  quarto::quarto_render(\"index.qmd\")    \n  ```\n  :::\n\n:::\n\n\n\n\n<br>\n\n------------------------------------------------------------------------\n\n## Contenido del Qproject (tras procesar el blog)\n\n::: {layout-ncol=\"1\"}\n![](./imagenes/tt_01/img_05.png){fig-align=\"center\"}\n:::\n\n\n\n-   Se han creado 2 subcarpetas: `_site` y `_freeze`\n\n-   `_site` es la carpeta que contiene el blog.\n\n<br>\n\n------------------------------------------------------------------------\n\n## Ver el blog en local\n\n-   `_site` es la carpeta que contiene el blog. Veamos su contenido\n\n-   La página principal (o Home) de nuestro blog es el archivo `index.html`.\n\n-   El archivo `index.html` ha sido generado por el fichero `index.qmd`.\n\n::: {.callout-important icon=\"false\"}\n#### Tarea 1.3: Ver el blog\n\n- Enseguida publicaremos el blog en Quartopub, pero antes vamos a  verlo en local.\n\n- Para ello solo tienes que pinchar en el archivo  `./blog_prueba_00/_site/index.html`\n\n- Ese fichero es el que contiene la \"Landing Page\" o \"Home\" de nuestro blog.\n\n- Como ves el blog es muy sencillo, solo tiene 2 páginas: \n\n    - la Home Page (que consiste en un listado de posts) \n    \n    - la página `About`\n\n:::\n\n\n\n<br>\n\n------------------------------------------------------------------------\n\n## Contenido de `index.qmd` {.smaller}\n\n-   El archivo `index.qmd` genera `index.html`, la página principal (o Home) de nuestro blog\n\n::: {.callout-warning collapse=\"true\" appearance=\"default\" icon=\"false\" width=\"100%\"}\n#### Extensiones: ver el contenido  del archivo `index.qmd`\n\nContenido del archivo  `index.qmd` que genera a `index.html`:\n\n\n::: { layout-ncol=\"1\"}\n![](./imagenes/tt_01/img_08.png){fig-align=\"center\"}\n:::\n\n- Como vemos, el archivo `index.qmd` no tiene contenido, sólo contiene un `yaml` o encabezamiento\n\n- Ese encabezamiento genera una lista (`listing:`) con los contenidos (con los ficheros .qmd) que haya en la carpeta `posts`.\n\n- Sí, has imaginado bien, en la carpeta `posts` es donde estarán los ficheros .qmd que generarán los posts\n\n- El resto del yaml son opciones para nuestro blog. Por ejemplo, `sort: \"date desc\"` ordenará el listado de post de más reciente a más antiguo.\n\n- Lo iremos viendo\n:::\n\n\n\n<br>\n\n------------------------------------------------------------------------\n\n## Alojando el blog\n\n::: {.callout-important icon=\"false\"}\n#### Tarea 1.4: Alojar el blog en Quarto Pub\n\nPara publicar nuestro blog en Quartopub sólo hay que:\n\n- teclear en la **Terminal** de RStudio (panel inferior-izquierda) lo siguiente:  \n\n  ::: {.cell}\n  \n  ```{.bash .cell-code  code-fold=\"false\" code-line-numbers=\"false\"}\n  quarto publish quarto-pub\n  ```\n  :::\n\n- Tras ejecutar lo anterior, se te pedirá que autorices en la Terminal.\n\n- Después se abrirá el navegador, tendrás que logearte en `Quarto Pub` y volverás a autorizar. Además te preguntarán el nombre del blog.\n\n:::\n\n\n\n-   Puedes ver [aquí](https://pjperez.quarto.pub/blog_prueba_00/), como quedaría el blog una vez alojado en Internet.\n\n<br>\n\n::: {.callout-warning collapse=\"true\" appearance=\"default\" icon=\"false\"}\n#### Extensiones: el fichero `_publish.yml`\n\nSi te fijas, tras haberse publicado el blog en \"Quarto Pub\", se habrá creado un **nuevo fichero** en nuestro Qproject: es el fichero `_publish.yml`. En él solamente están los metadatos necesarios para publicar y **actualizar nuestro blog**.\n\n::: {layout-ncol=1}\n![](./imagenes/tt_01/img_07.png){fig-align=\"center\"}\n\n:::\n\n:::\n\n\n\n<br>\n\n------------------------------------------------------------------------\n\n::: {.callout-note collapse=\"true\" appearance=\"default\" icon=\"false\"}\n#### Resumen (tutorial nº 1)\n\nEn este tutorial, la **segunda parte del taller**, hemos visto:\n\n- Como crear un Qproject con la estructura de carpetas y archivos necesaria para generar un blog básico\n\n- Hemos visto (de forma rápida) el contenido, los archivos, que hay en el Qproject. \n\n- El Qproject contiene 3 archivos que serán los importantes, los que trabajaremos en el próximo tutorial, concretamente:  `_quarto_yml`, `index.qmd` y `about.qmd`\n\n- Hemos aprendido a generar el blog a través de RStudio, simplemente `Build > Render Website`\n\n- Hemos visto que el blog realmente se aloja en la carpeta `_site` y que la homepage es `index.html`\n\n- La homepage del blog es un listado de post (lógicamente, es un blog!!)\n\n- La homepage (`index.html`) es generada por el archivo `index.qmd`\n\n- El archivo `index.qmd` solo tiene `yaml`\n\n- Hemos publicado el blog en Quarto Pub\n\n:::\n\n\n\n\n<br>\n\n# 2. Tuneado básico del blog {background-color=\"#EEBF8B\"}\n\n(2ª parte del tutorial)\n\n::: {.callout-tip collapse=\"false\" appearance=\"default\" icon=\"false\"}\n## ¿Qué haremos en este tutorial?\n\n-   En esta segunda parte del taller vamos a **mejorar/tunear un poco nuestro blog**. Nos servirá para afianzar nuestro conocimiento de la estructura de ficheros del blog\n\n-   En este tutorial nº 2, para hacer un **tuneado básico** del blog, modificaremos 3 archivos, concretamente los archivos: `_quarto.yml`, `index.qmd` y `about.qmd`. Iremos archivo por archivo\n\n- Finalmente modificaremos (un poco) el archivo `styles.css`\n\n- En el tutorial nº 6 se profundiza en el tuneado del blog\n:::\n\n\n\n<br>\n\n------------------------------------------------------------------------\n\n## Archivo `_quarto.yml` {.smaller}\n\n::: {layout-ncol=2}\n![Contenido original de `_quarto.yml`](./imagenes/tt_01/img_09.png){fig-align=\"center\"}\n\n![Así dejaremos el fichero `_quarto.yml`](./imagenes/tt_01/img_10.png){fig-align=\"center\"}\n:::\n\n\n\n\n------------------------------------------------------------------------\n\n## \n\n::: {.callout-important icon=\"false\"}\n#### Tarea 2.1: Modificar el contenido de `_quarto.yml`\n\n- Sustituye el contenido original del fichero `_quarto.yml` por el contenido del siguiente chunk.\n\n- Pon un título que te guste a tu blog (línea 5 `title: \"titulo-de-mi-blog\"`)\n\n- Pon tu usuario de Github y cuenta de Twitter (lineas 12 y 14: `href:`)\n\n- Pon tu email (línea 16: `href:`)\n\n\n\n````yaml\nproject:\n  type: website\n\nwebsite:\n  title: \"Mi blog (aún en pruebas)\"\n  navbar:\n    logo: \"profile.jpg\"\n    right:\n      - text: \"About me\"\n        href: about.qmd\n      - icon: github\n        href: https://github.com/<tu-usuario-github>\n      - icon: twitter\n        href: https://twitter.com/<tu-usuario-twitter>\n      - icon: envelope\n        url: \"mailto:<tu-mail@uv.es>\"\n    left: \n      - text: \"Docencia\"\n        href: docencia.qmd\n \nformat:\n  html:\n    theme: flatly  \n    css: styles.css\n    toc: true\n    highlight-style: a11y\n````\n\n\n:::\n\n\n\n\nAdemás:\n\n-   **lineas 17-19**: añadimos la página/pestaña \"Docencia\" a la izquierda de la navbar\n-   **lineas 21-26**: modificamos el theme, ponemos TOC a los documentos, ..., **CSS**,\n\n\n------------------------------------------------------------------------\n\n::: {.callout-important icon=\"false\"}\n#### Tarea 2.2: Crear el archivo `docencia.qmd`\n\n- Podríamos crear el archivo `docencia.qmd` con cualquier contenido, incluso podría ser un documento sin contenido, PERO, mejor si lo creas con el siguiente contenido:\n\n::: {.cell}\n\n```{.yaml .cell-code}\n---\ntitle: \"Mi docencia\"\n---\n\nMi docencia es:\n\n## curso 2021-2022\n\n- [Econometría](/pdfs/econometria.pdf)\n\n## curso 2022-2023\n\n- [Algebra](/pdfs/econometria.pdf)\n```\n:::\n\n:::\n\n::: {.callout-important icon=\"false\"}\n#### Tarea 2.3: Crear el archivo `/pdfs/econometria.pdf`\n\n-   Como puedes ver, en el archivo `docencia.qmd` se hace referencia al archivo `/pdfs/econometria.pdf`. Si quieres que el link funcione, tienes que crear dentro del Qproject, la subcarpeta `pdfs`, y dentro de ella el archivo `econometria.pdf`.\n\n- Puede ser cualquier pdf, siempre que se llame `econometria.pdf`\n\n:::\n\n::: {.callout-important icon=\"false\"}\n#### Tarea 2.4: Volver a generar el blog\n\n- Una vez hechas las **tareas 2 y 3**, puedes crear de nuevo el blog con `Build > Web page`.\n\n:::\n\n\n\n------------------------------------------------------------------------\n\n## Archivo `index.qmd`\n\n::: {layout-ncol=2}\n![Contenido original de `index.qmd`](./imagenes/tt_01/img_11.png){fig-align=\"center\"}\n\n![Así dejaremos el fichero `index.qmd`](./imagenes/tt_01/img_12.png){fig-align=\"center\"}\n:::\n\n\n\n- De momento, **solo vamos a hacer cambios en la segunda linea**: cambiaremos el título.\n\n- Fíjate que es el título del listado de posts (del blog), no de la página web.\n\n- Fijaros que `index.qmd` es un archivo especial: \"sólo tiene yaml\". Es el que genera el listado de posts\n\n<br>\n\n------------------------------------------------------------------------\n\n::: {.callout-important icon=\"false\"}\n#### Tarea 2.5: Modificar el contenido de `index.qmd`\n\n- He cambiado la segunda linea (**title:**) para poner un nombre a la página con el listado de posts.\n\n- También podemos añadir una descripción (con **description:**).\n\n\n::: {.cell}\n\n```{.yaml .cell-code}\n---\ntitle: \"Mi listado de post\"\ndescription: |\n  Estoy tratando de hacer mi blog\nlisting:\n  contents: posts\n  sort: \"date desc\"\n  type: default\n  categories: true\n  sort-ui: false\n  filter-ui: false\npage-layout: full\ntitle-block-banner: true\n---\n```\n:::\n\n:::\n\n\n\n\n\n<br>\n\n------------------------------------------------------------------------\n\n## Archivo `about.qmd` {.smaller}\n\n::: {layout-ncol=2}\n![Contenido original de `about.qmd`](./imagenes/tt_01/img_13.png){fig-align=\"center\"}\n\n![Así dejaremos el fichero `about.qmd`](./imagenes/tt_01/img_14.png){fig-align=\"center\"}\n:::\n\n\n\n-   Si en el `yaml` se activa la opción `about:` (linea 4), entonces puedes usar unas **plantillas** que Quarto tiene disponibles para **crear About's pages**.\n\n-   Como puedes ver [aquí](https://quarto.org/docs/websites/website-about.html#templates) hay **5 plantillas**: jolla, trestles, solana, marquee y broadside.\n\n-   [Aquí](https://quarto.org/docs/websites/website-about.html) tienes la documentación oficial sobre estas plantillas.\n\n<br>\n\n------------------------------------------------------------------------\n\n::: {.callout-important icon=\"false\"}\n#### Tarea 2.6: Modificar el contenido de `about.qmd`\n\n-   Antes he dicho que solo modificaríamos la linea 5, pero mejor si lo complementamos con algunas acciones más, como el tamaño de la foto y su forma, por eso he añadido 2 lineas tras `template:trestles`.\n\n-   Lógicamente estaría bien que sustituyeses la foto: se trata de cambiar `profile.jpg`, en la linea 3, por la ruta a tu foto.\n\n-   Abajo tienes el código:\n\n::: {.cell}\n\n```{.r .cell-code}\n---\ntitle: Yo mismo\nimage: profile.jpg\nabout:\n  template: trestles    #- {jolla, solana, ...}\n  image-width: 10em     #- https://cybmeta.com/em-y-rem\n  image-shape: round    #- rectangle, round, rounded\n  links:\n    - icon: twitter\n      text: Twitter\n      href: https://twitter.com\n    - icon: linkedin\n      text: LinkedIn\n      href: https://linkedin.com\n    - icon: github\n      text: Github\n      href: https://github.com\n---\n        \nHola, soy \"Yo mismo\". \n      \nEstoy asistiendo al taller **Mi primer blog con Quarto** impartido en el [I Congreso & XII Jornadas de Usuarios de R](http://r-es.org/12jr/){target=\"_blank\"} celebradas en Córdoba (Spain), 23-25 de noviembre de 2022.\n      \nEn un ratito ya piloto Quarto y genero my blog!!! 🙂\n```\n:::\n:::\n\n\n\n<br>\n\n------------------------------------------------------------------------\n\n## Archivo `styles.css`\n\n-   Puedes cambiar la apariencia estética del blog usando los `themes` predefinidos en Quarto o puedes usar el archivo `styles.css`[^1]\n\n[^1]: Veremos en el tutorial nº 6 que también podremos usar archivos `.scss`\n\n::: {.callout-important icon=\"false\"}\n#### Tarea 2.7: Modificar `styles.css`\n\n- Simplemente sustituye el contenido original del fichero `styles.css` por el contenido del siguiente chunk:\n\n\n````css\n/* css styles */\n\n\n/* justificar el texto */ \np, ul, ol {\n  text-align: justify; }       \n````\n\n:::\n\n\n\n<br>\n\n------------------------------------------------------------------------\n\n::: {.callout-note collapse=\"true\" appearance=\"default\" icon=\"false\"}\n#### Resumen (tutorial nº 2)\n\n- En esta tercera parte del taller hemos aprendido a **mejorar/tunear un poco nuestro blog**.\n\n- Hemos modificado 3 archivos: \n\n  1. `_quarto.yml`: hemos modificado el título del blog y la estructura de la barra de navegación; concretamente hemos añadido una página nueva.\n\n  2. `index.qmd`: construye la Home Page de nuestra web. La opción `listing:` hace que nuestra web es en realidad un blog.\n    \n  3. `about.qmd`: hemos utilizado las plantillas de Quarto para configurar nuestra About page.\n\n- Finalmente hemos modificado (mínimamente) el archivo `styles.css`.\n\n\n:::\n\n\n\n<br>\n\n-   [Aquí](https://pjperez.quarto.pub/blog_pruebas_01/) puedes ver **como quedaría el blog** tras haber modificado `_quarto.yml`, `index.qmd`, `about.qmd` y `styles.css`.\n\n------------------------------------------------------------------------\n\n## Práctica (tutorial nº 2) {background-color=\"#D3F3E7\"}\n\nEn esta sección dedicaremos un tiempo a la **práctica libre para que adaptes el blog a tus necesidades y gustos**. Por ejemplo puedes probar:\n\n<br>\n\n1.  Añadir una **nueva página a la web** (`quarto.yml`). Os doy una posibilidad en la siguiente slide\n\n<br>\n\n2.  Modificar la **apariencia del blog** (realmente del listado de posts) jugando con las opciones que nos proporciona Quarto (`index.qmd`). Gracias YAML inteligence!!\n\n<br>\n\n3.  Modificar la apariencia de la **página About** (`about.qmd`)\n\n------------------------------------------------------------------------\n\n::: {.callout-tip collapse=\"true\" appearance=\"default\" icon=\"false\"}\n\n#### Práctica 2.1: añadir una página más a nuestra web (`_quarto.yml`)\n\nEvidentemente puedes probar a añadir la página que quieras, pero te ofrezco la siguiente posibilidad:\n\n- Con las lineas 12 y siguientes crear una página más en nuestro blog. La página se llamará \"Más cosas\". Además, esta página nueva tiene la particularidad de que cuando recreemos el blog se convertirá en un desplegable con acceso a varias páginas: \"Docencia 2\", \"Docencia 3\" y \"Docencia 4\".\n\n- Fíjate que he puesto la nueva página a la izquierda (`left: `)\n\n- Además, puedes probar distintas opciones de `theme` (linea 34) y de `highlighting` (linea 38)\n\n- También puedes cambiar el color del fondo de la barra de navegación (linea 8)\n\n\n```yaml\nproject:\n  type: website\n\nwebsite:\n  title: \"Mi blog (aún en pruebas)\"\n  navbar:\n    logo: \"profile.jpg\"\n    #background: \"#CCCCFF\"    #- {“primary”, “secondary”,  “danger”, “warning”, “light”, “dark”, or hex color} (el backgroung de la navbar)\n    left: \n      - text: \"Docencia\"\n        href: docencia.qmd\n      - text: \"Más cosas\"\n        menu:\n          - text: \"Docencia 2\"\n            href: docencia.qmd\n          - text: \"Docencia 3\"\n            href: docencia.qmd\n          - text: \"---\"\n          - text: \"Docencia 4\"\n            href: docencia.qmd\n    right:\n      - about.qmd\n      - icon: github\n        href: https://github.com/<tu-usuario-github>\n      - icon: twitter\n        href: https://twitter.com/<tu-usuario twitter>\n      - icon: envelope\n        url: \"mailto:<tu-mail@uv.es>\"\n \n\nformat:\n  html:\n    #- https://quarto.org/docs/output-formats/html-themes.html\n    theme: flatly  \n    css: styles.css\n    toc: true\n    #- https://quarto.org/docs/output-formats/html-code.html#highlighting\n    highlight-style: a11y\n```\n:::\n\n\n\n\n------------------------------------------------------------------------\n\n::: {.callout-tip collapse=\"true\" appearance=\"default\" icon=\"false\"}\n\n#### Práctica 2.2: Modificar la **apariencia del blog** (`index.qmd`)\n\n- Se trata de cambiar las opciones predefinidas de tu archivo **index.qmd**\n\n- Con ello podremos cambiar la **apariencia del listado de posts**\n\n- Para ello tienes que ir jugando con las opciones que nos ha proporcionado la plantilla de Quarto en el fichero `index.qmd`. \n\n- la YAML inteligence te ayudará!! (vamos el autocompletado en el YAML)\n\n- No uses las opciones llamadas `custom`\n\n::: {.cell}\n\n```{.yaml .cell-code}\n---\ntitle: \"Mi listado de posts\"\ndescription: |\n  Estoy tratando de hacer mi blog\nlisting:\n  contents: posts\n  sort: \"date desc\"\n  type: default        #- {default, table, grid, custom}\n  categories: true\n  sort-ui: false\n  filter-ui: false\npage-layout: full         #- {article, full, custom}\ntitle-block-banner: true  #- {true, false}\n---\n\n```\n:::\n`\n\n:::\n\n\n\n\n------------------------------------------------------------------------\n\n::: {.callout-tip collapse=\"true\" appearance=\"default\" icon=\"false\"}\n\n#### Práctica 2.3: Modificar la **página About** (`about.qmd`)\n\n- Se trata de cambiar las opciones predefinidas de tu archivo **about.qmd**\n\n- Estaría bien que pusieses una foto tuya.\n\n- Poner los enlaces a tus redes sociales y email\n\n- Puedes adaptar el texto y dar algo de formato a la página.\n\n\n::: {.cell}\n\n```{.yaml .cell-code}\n---\ntitle: Yo mismo\nimage: profile.jpg\nabout:\n  template: trestles    #- {jolla, solana, ...}\n  image-width: 10em     #- https://cybmeta.com/em-y-rem\n  image-shape: round    #- rectangle, round, rounded\n  links:\n    - icon: twitter\n      text: Twitter\n      href: https://twitter.com\n    - icon: linkedin\n      text: LinkedIn\n      href: https://linkedin.com\n    - icon: github\n      text: Github\n      href: https://github.com\n---\n        \nHola, soy \"Yo mismo\". \n      \nEstoy asistiendo al taller **Mi primer blog con Quarto** impartido en el [I Congreso & XII Jornadas de Usuarios de R](http://r-es.org/12jr/){target=\"_blank\"} celebradas en Córdoba (Spain), 23-25 de noviembre de 2022.\n      \nEn un ratito ya piloto Quarto y genero my blog!!! 🙂\n```\n:::\n\n:::\n\n\n\n\n<br>\n\n# 3. Convertir el blog en web personal {background-color=\"#EEBF8B\"}\n\n(3ª parte del tutorial)\n\n::: {.callout-tip  appearance=\"default\" icon=\"false\"}\n## ¿Qué haremos en este tutorial?\n\n- Convertir nuestro blog en una web personal.\n\n- Haremos que la \"landing page\" o Home de  nuestra web no sea una página con el listado de posts, sino que sea una página en la que se reciba a los futuros visitantes de nuestra web\n\n- Para ello solo tendremos que cambiar el nombre de dos ficheros y referenciar uno de ellos en `_quarto.yml`.\n\n:::\n\n\n\n<br>\n\n------------------------------------------------------------------------\n\n::: {.callout-important icon=\"false\"}\n#### Tarea 3.1: Renombrar el archivo index.qmd\n\n- Cambia el nombre del fichero `index.qmd` a `blog.qmd`\n\n- Ahora este archivo no está referenciado en `_quarto.yml`, por lo que no se mostraría si hacemos un rebuild^[Además, como nuestro Qproject ahora no tiene fichero `index.qmd` el rebuild no funcionaría].\n\n:::\n\n\n\n------------------------------------------------------------------------\n\n::: {.callout-important icon=\"false\"}\n#### Tarea 3.2: Incluir `blog.qmd` en la web\n\n- Para que `blog.qmd`, la página que contiene el listado de posts, se muestre en nuestra web hay que refrenciarlo/incluirlo en `_quarto.yml`\n\n\n\n- Simplemente, tendríamos que modificar las lineas 8 y 9 que ahora están referenciando al fichero `about.qmd`. Por ejemplo podríamos **dejar las lineas 8 y 9 como se ve abajo** (a la derecha):\n\n\n\n![](./imagenes/tt_01/img_13gg-2.png){fig-align=\"center\"}\n\n- Para hacerlo, es mejor copiar el código de abajo y pegarlo en `_quarto.yml`\n\n::: {.cell}\n\n```{.r .cell-code .code-overflow-wrap  code-line-numbers=\"true\"}\nproject:\n  type: website\n\nwebsite:\n  title: \"Mi blog (aún en pruebas)\"\n  navbar:\n    logo: \"profile.jpg\"\n    #background: \"#CCCCFF\"    #- {“primary”, “secondary”,  “danger”, “warning”, “light”, “dark”, or hex color} (el backgroung de la navbar)\n    left: \n      - text: \"Docencia\"\n        href: docencia.qmd\n      - text: \"Más cosas\"\n        menu:\n          - text: \"Docencia 2\"\n            href: docencia.qmd\n          - text: \"Docencia 3\"\n            href: docencia.qmd\n          - text: \"---\"\n          - text: \"Docencia 4\"\n            href: docencia.qmd\n    right:\n      - text: \"Mi blog\"\n        href: blog.qmd\n      - icon: github\n        href: https://github.com/<tu-usuario-github>\n      - icon: twitter\n        href: https://twitter.com/<tu-usuario twitter>\n      - icon: envelope\n        url: \"mailto:<tu-mail@uv.es>\"\n \n\nformat:\n  html:\n    #- https://quarto.org/docs/output-formats/html-themes.html\n    theme: flatly  \n    css: styles.css\n    toc: true\n    #- https://quarto.org/docs/output-formats/html-code.html#highlighting\n    highlight-style: a11y\n```\n:::\n\n\n:::\n\n- Aún no podemos refrescar la web porque ahora no tenemos archivo `index.qmd`. \n\n\n:::\n\n\n\n\n------------------------------------------------------------------------\n\n::: {.callout-important icon=\"false\"}\n#### Tarea 3.3: Renombrar el archivo about.qmd\n\n- Cambia el nombre del fichero  `about.qmd` a `index.qmd`, con lo que pasará ser nuestra \"landing page\". \n\n- Como el antiguo fichero `about` contenía nuestra foto parece que es un buen candidato a ser nuestra \"Home\"\n:::\n\n\n\n------------------------------------------------------------------------\n\n::: {.callout-important icon=\"false\"}\n#### Tarea 3.4: Hacemos un rebuild de la web\n\n- Ahora ya tenemos fichero `index.qmd`, por lo que ya podemos hacer un rebuild de nuestra web y veremos la nueva estructura de nuestra web, con una foto nuestra en la \"landing page\".\n\n- Para ello: `Build > Render Website` en RStudio.\n:::\n\n\n\n# 4. Workflow: ¿cómo crear un post? {background-color=\"#EEBF8B\"}\n\n(4ª parte del tutorial)\n\n::: {.callout-tip collapse=\"false\" appearance=\"default\" icon=\"false\"}\n## ¿Qué haremos en este tutorial?\n\n- Ver como podemos iniciar un nuevo post\n\n- (podemos marcar post todavía no acabados con `draft: true` en el yaml del post)\n:::\n\n\n\n<br>\n\n------------------------------------------------------------------------\n\n## ¿Donde están los posts del blog?\n\n-   Los ficheros `.qmd` que generan los posts están **en la carpeta `posts`** (de nuestro Qproject que genera el blog).\n\n-   **Cada post** está en **una carpeta diferente**[^2]:\n\n[^2]: No es necesario que los posts estén cada uno en una carpeta, pero me parece una buena práctica.\n\n::: {layout-ncol=1}\n\n![](./imagenes/tt_01/img_15-2.png){fig-align=\"center\"}\n:::\n\n\n\n-   Veamos (en la siguiente slide) el contenido de `./posts/welcome/`\n\n------------------------------------------------------------------------\n\n## Contenido de cada subcarpeta de `./posts/`\n\n<br>\n\n-   Por ejemplo de `./posts/welcome/`\n\n::: {layout-ncol=2}\n\n![Contenido de la carpeta `welcome` que genera el post titulado \"Welcome to my blog\"](./imagenes/tt_01/img_16.png){fig-align=\"center\"}\n\n![Contenido del archivo `index.qmd`\"](./imagenes/tt_01/img_17.png){fig-align=\"center\"}\n:::\n\n\n\n<br>\n\n------------------------------------------------------------------------\n\n::: {.callout-important icon=\"false\"}\n#### Tarea 4.1: Creando un nuevo post\n\n- Crea una nueva subcarpeta en `./posts/`\n\n- Ponle nombre, por ejemplo: \"my-primer-post\"\n\n- Copia en la carpeta que hemos creado el contenido de la carpeta de uno de los 2 posts. Por ejemplo copia los 2 archivos que hay en `./posts/welcome/`  y pégalos en `./posts/my-primer-post/`; es decir, pegamos el archivo `index.qmd` y `tumbnail.jpg` en nuestra nueva carpeta.\n\n- Vuelve a regenerar el blog: `Build > Render Website` y verás que ahora nuestro blog ya tiene tres posts.\n:::\n\n\n\n------------------------------------------------------------------------\n\n::: {.callout-important icon=\"false\"}\n#### Tarea 4.2: Modificando el tercer post\n\n- Modifica el contenido de `/.posts/my-primer-post/index.qmd`. Por ejemplo, puedes dejarlo así:\n\n\n````markdown\n---\ntitle: \"Mi primer post con Quarto\"\nauthor: \"Pedro J. Pérez\"\ndate: \"2022-10-25\"\ncategories: [R, quarto]\nimage: \"thumbnail.jpg\"\n---\n\nEste es mi **primer post** con Quarto!!!!\n\n```{{r}}\nsqrt(2 + 2)\n```\n\nVoy a poner una imagen:\n\n![](thumbnail.jpg)\n\n\nAcabé con mi primer post. FIN\n  \n````\n\n- Sustituye `thumbnail.jpg` por otro archivo\n\n- La opción de yaml (linea 6): `image: \"thumbnail.jpg\"` nos permite elegir la imagen que acompañara al post en la listing page. \n\n\n\n- Vuelve a regenerar el blog: `Build > Render Website`\n:::\n\n\n\n<br>\n\n------------------------------------------------------------------------\n\n::: {.callout-note collapse=\"true\" appearance=\"default\" icon=\"false\"}\n#### Resumen (tutorial nº 4)\n\n- En esta **cuarta parte del taller** hemos visto como podemos generar/escribir nuevos posts para nuestro blog: solo hay replicar una de las carpetas de anteriores posts y cambiarle el nombre.\n\n\n<br>\n\n- Hemos visto como cambiar la imagen que acompaña a los posts en la \"listing page\".\n- Recuerda que podemos marcar un post con `draft: true` en el yaml del post.\n\n\n<br>\n\n- En el **siguiente tutorial** veremos en profundidad las posibilidades que nos ofrece Quarto para escribir nuestros posts.\n\n:::\n\n\n\n<br>\n\n# 5. Escribiendo posts: practicando con Quarto {background-color=\"#EEBF8B\"}\n\n(5ª parte del tutorial)\n\n::: {.callout-tip  appearance=\"default\" icon=\"false\"}\n## ¿Qué haremos en este tutorial?\n\n- Aprender a escribir nuestro posts con Quarto: con ficheros `.qmd`\n\n- Repasaremos las 3 partes de los documentos `.qmd`: yaml, texto, chunks\n\n- Además veremos: **layout**\n\n- Aprender a utilizar algunos truquillos de Quarto\n:::\n\n::: {.callout-warning  appearance=\"default\" icon=\"true\"}\n\nVoy a **suponer que los asistentes al taller**, y posibles lectores de estos tutoriales, **conocen Rmarkdown** y han escrito algún documento `.Rmd`. En ese caso, el paso de `.Rmd` a `.qmd` es sencillo. \n\nEn cualquier caso, [aquí](https://quarto.org/docs/faq/rmarkdown.html) tienes unas FAQ's para usuarios de .Rmd que se preguntan si pasarse a Quarto, y [aquí](https://laderast.github.io/qmd_rmd/#/title-slide) unas slides sobre las diferencias entre `.qmd` y `.Rmd`.\n\nAquellos que no sepan qué es Rmarkdown pueden empezar por [aquí](https://perezp44.github.io/intro-ds-22-23-web/tutoriales/tt_07_Rmarkdown.html) o [aquí](https://perezp44.github.io/intro-ds-22-23-web/slides/slides_07_rmarkdown.html#1).\n\n:::\n\n\n\n<br>\n\n------------------------------------------------------------------------\n\n## Ficheros `.qmd`\n\n-   Los ficheros `.qmd` tienen **3 partes**: YAML, texto y chunks de código.\n\n::: {layout-ncol=1}\n\n![](./imagenes/tt_01/img_19c.png){fig-align=\"center\"}\n:::\n\n\n\n-   Veámoslas una a una\n\n# 1. YAML {.unnumbered background-color=\"#b8c2aa\"}\n\n------------------------------------------------------------------------\n\n## YAML: ideas importantes\n\n<br>\n\n-   El encabezamiento o **YAML** sirve para fijar **opciones y metadatos** de nuestro documento.\n\n<br>\n\n-   El `YAML` será procesado varias veces durante el procesado del documento: es leído por Quarto, knitr y Pandoc e **influirá en el output final**.\n\n<br>\n\n-   El hecho de estar trabajando dentro de un **Qproject** nos da **mucha versatilidad** a la hora de especificar el YAML de nuestros documentos `.qmd`. Documentación oficial [aquí](https://quarto.org/docs/projects/quarto-projects.html)\n\n## El `yaml` de un post se puede especificar en **3 niveles** {background-color=\"#f7f5d2\"}\n\n<br>\n\n1.   **Nivel proyecto**:todo Qproject tiene archivo `_quarto.yml`. Todo documento que se procese dentro del proyecto, heredará los metadatos definidos en `_quarto.yml`.\n\n2.   **Nivel carpeta**: si en una carpeta existe un documento `_metadata.yml`, los documentos de esa carpeta heredan sus metadatos. La carpeta `./posts/` de un blog suele tener un archivo `_metadata.yml`.\n\n3.   **Nivel documento**: En el yaml del propio documento `.qmd`\n\n<br>\n\n- Si hay conflictos **prevalecen las opciones del nivel documento**, luego nivel carpeta y finalmente nivel proyecto.\n\n- **Documentación oficial** de Quarto con las **principales opciones** que se pueden fijar en el YAML para documentos html: [aquí](https://quarto.org/docs/output-formats/html-basics.html) y [aquí](https://quarto.org/docs/reference/formats/html.html)\n\n------------------------------------------------------------------------\n\n## YAML: tal como lo tenemos ahora {.smaller}\n\n::: {.panel-tabset}\n\n\n#### 1. nivel proyecto (_quarto.yml)\n\nAbajo el contenido del fichero `_quarto.yml` tal y como lo tenemos ahora en nuestro blog. Solo he añadido 3 comentarios para diferenciar entre secciones:\n\n\n![](./imagenes/tt_01/img_666a.png){fig-align=\"center\"}\n\n\n#### 2. nivel carpeta (_metadata.yml)\n\nAbajo el, contenido del fichero `./posts/_metadata.yml`. Afectará a todos los ficheros `.qmd` que haya en la carpeta `./posts/`\n\n![](./imagenes/tt_01/img_666b.png){fig-align=\"center\"}\n\n#### 3. nivel documento (index.qmd)\n\n![](./imagenes/tt_01/img_666c.png){fig-align=\"center\"}\n\n:::\n\n\n\n------------------------------------------------------------------------\n\n## YAML: NIVEL PROYECTO (opciones en `_quarto.yml`) {.smaller}\n\nEn `_quarto.yml` se suelen poner opciones referentes a 3 aspectos:\n\n::: panel-tabset\n#### 1. Sobre el propio Qproject\n\n::: {.cell}\n\n```{.r .cell-code .code-overflow-scroll  code-line-numbers=\"true\"}\n# 1/ Opciones referentes al proyecto ----------------------------\nproject:\n  type: website\n  output-dir: docs    #- podemos cambiar la carpeta donde se redirige el output (.html)\n  # execute-dir: project    #- cambiar el render directory: https://quarto.org/docs/projects/code-execution.html#working-dir\n```\n:::\n\n\n\n<br>\n\n-   linea 4: podemos elegir la carpeta de destino de nuestro blog\n-   linea 5: podemos cambiar el render directory de los `.qmd`\n\n<br>\n\nDocumentación oficial [aquí](https://quarto.org/docs/projects/quarto-projects.html).\n\n#### 2. Estructura de la página web\n\n::: {.cell}\n\n```{.r .cell-code .code-overflow-scroll  code-line-numbers=\"true\"}\n#- 2/ Opciones referentes a la estructura de la web -----------------\nwebsite:\n  title: \"Mi blog (aún en pruebas)\"\n  favicon: profile.jpg\n  #site-url: https://....\n  #repo-url: https://....\n  open-graph: true #-https://quarto.org/docs/websites/website-tools.html#twitter-cards\n  twitter-card:\n    creator: \"@tu-usuario-twitter\"\n    card-style: summary_large_image\n  navbar:\n    logo: \"profile.jpg\"\n    #background: primary    #- pink\n    right:\n      - text: \"About me\"\n        href: about.qmd\n      - icon: github\n        href: https://github.com/<tu-usuario-github>\n      - icon: twitter\n        href: https://twitter.com/<tu-usuario-twitter>\n      - icon: envelope\n        url: \"mailto:<tu-mail@uv.es>\"\n    left: \n      - icon: house-door\n        href: index.html\n      - text: \"Docencia\"\n        href: docencia.qmd\n  page-footer:\n    left: \"© 2022 Pedro J. Pérez\"\n    center: \"Hecho con [Quarto](https://quarto.org)\"\n    right:\n      - icon: github\n        href: https://github.com/<tu-usuario-github>\n      - icon: twitter\n        href: https://twitter.com/<tu-usuario-twitter>\n      - icon: envelope\n        url: \"mailto:<tu-mail>@uv.es\"\n```\n:::\n\n\n\n<br>\n\nComo ves, se añadirían elementos como:\n\n-   lineas 28 a 37: se añade un pie de página al blog\n\n-   lineas 24 y 25: Hemos añadido un elemento a la `navbar` concretamente el icono `Home`. La documentación oficial para elementos de navegación está [aquí](https://quarto.org/docs/websites/website-navigation.html)\n\n-   linea 4: añadimos un favicon\n\n-   lineas 5 y 6: el url de la web y del repo en Github\n\n-   lineas 7-10: elementos de redes sociales. La documentación oficial para estos elementos esta [aquí](https://quarto.org/docs/websites/website-tools.html)\n\n<br>\n\n#### 3. Formato de salida de los documentos\n\n::: {.cell}\n\n```{.r .cell-code .code-overflow-scroll  code-line-numbers=\"true\"}\n#- 3/ Opciones referentes al formato de salida  ---------------------\nformat:\n  html:\n    theme: flatly  \n    css: styles.css\n    toc: true\n    highlight-style: a11y\n```\n:::\n\n\n\n<br>\n\nEn un blog/web el formato de salida es siempre `.html`; sin embargo podemos especificar otras opciones como por ejemplo sí los documentos (o páginas de la web, o post del blog) tienen un índice flotante, etc... Documentación oficial [aquí](https://quarto.org/docs/output-formats/html-basics.html) y [aquí](https://quarto.org/docs/reference/formats/html.html)\n:::\n\n------------------------------------------------------------------------\n\n## Un ejemplo \"completito\" de `_quarto.yml` {.smaller}\n\nSi quieres ver un documento `_quarto.yml` completito, ve [aquí](https://github.com/quarto-dev/quarto-web/blob/main/_quarto.yml). Pertenece a la [web de Quarto](https://quarto.org/docs/websites/).\n\n<br>\n\n::: columns\n::: {.column width=\"50%\"}\n\n```{=html}\n<iframe width=\"600px\" height=\"400px\" style=\"border:2px solid #dee2e6;\" src=\"https://quarto.org/docs/guide/\"></iframe>\n```\n\n:::\n\n::: {.column width=\"50%\"}\n```yaml\nproject:\n  type: website\n  output-dir: _site\n  resources:\n    - \"/docs/download/_download.json\"\n    - \"/docs/download/_prerelease.json\"\n    - \"/_redirects\"\n\nwebsite:\n  title: \"Quarto\"\n  image: \"quarto.png\"\n  favicon: \"favicon.png\"\n  google-analytics: \"G-FV9Z7SDZ0M\"\n  open-graph: true\n  twitter-card: true\n  site-url: https://quarto.org\n  repo-url: https://github.com/quarto-dev/quarto-web\n  repo-actions: [edit, issue]\n  page-navigation: true\n  search:\n    algolia:\n      index-name: prod_QUARTO\n      application-id: ZPJB5I1QN7\n      search-only-api-key: 41be6c1e0a7fea4a51b107810facf577\n      analytics-events: true\n      show-logo: true\n  page-footer:\n    left: |\n      Proudly supported by\n      [![](https://www.rstudio.com/wp-content/uploads/2018/10/RStudio-Logo-flat.svg){fig-alt=\"RStudio\" width=65px}](https://www.rstudio.com)\n    center:\n      - text: \"About\"\n        href: about.qmd\n      - text: \"FAQ\"\n        href: docs/faq/index.qmd\n      - text: \"License\"\n        href: license.qmd\n      - text: \"Trademark\"\n        href: trademark.qmd\n    right:\n      - icon: twitter\n        href: https://twitter.com/quarto_pub\n        aria-label: Quarto Twitter\n      - icon: github\n        href: https://github.com/quarto-dev/quarto-cli\n        aria-label: Quarto GitHub\n  navbar:\n    background: light\n    logo: quarto.png\n    logo-alt: \"Quarto logo.\"\n    title: false\n    collapse-below: lg\n    left:\n      - text: \"Overview\"\n        href: index.qmd\n      - text: \"Get Started\"\n        href: docs/get-started/index.qmd\n      - text: \"Guide\"\n        href: docs/guide/index.qmd\n      - text: Extensions\n        href: docs/extensions/index.qmd\n      - text: \"Reference\"\n        href: docs/reference/index.qmd\n      - text: \"Gallery\"\n        href: docs/gallery/index.qmd\n      - text: \"Blog\"\n        href: docs/blog/index.qmd\n      - text: \"Help\"\n        menu:\n          - text: \"Report a Bug\"\n            icon: \"bug\"\n            href: \"https://github.com/quarto-dev/quarto-cli/issues\"\n          - text: \"Ask a Question\"\n            icon: \"chat-right-text\"\n            href: \"https://github.com/quarto-dev/quarto-cli/discussions\"\n          - text: \"FAQ\"\n            icon: \"question-circle\"\n            href: docs/faq/index.qmd\n    right:\n      - icon: twitter\n        href: https://twitter.com/quarto_pub\n        aria-label: Quarto Twitter\n      - icon: github\n        href: https://github.com/quarto-dev/quarto-cli\n        aria-label: Quarto GitHub\n\n  sidebar:\n    - id: get-started\n      title: \"Get Started\"\n      style: \"floating\"\n      collapse-level: 2\n      align: left\n      contents:\n        - docs/get-started/index.qmd\n        - text: \"Tutorial: Hello, Quarto\"\n          href: docs/get-started/hello/\n        - text: \"Tutorial: Computations\"\n          href: docs/get-started/computations/\n        - text: \"Tutorial: Authoring\"\n          href: docs/get-started/authoring/\n\n    - id: guide\n      collapse-level: 1\n      contents:\n        - text: \"Guide\"\n          href: docs/guide/index.qmd\n        - section: \"Authoring\"\n          contents:\n            - docs/authoring/markdown-basics.qmd\n            - docs/authoring/figures.qmd\n            - docs/authoring/tables.qmd\n            - docs/authoring/diagrams.qmd\n            - docs/authoring/videos.qmd\n            - docs/authoring/callouts.qmd\n            - docs/authoring/article-layout.qmd\n            - section: \"Scholarly Writing\"\n              contents:\n                - docs/authoring/title-blocks.qmd\n                - docs/authoring/footnotes-and-citations.qmd\n                - docs/authoring/cross-references.qmd\n                - docs/authoring/create-citeable-articles.qmd\n                - docs/authoring/appendices.qmd\n        - section: \"Computations\"\n          contents:\n            - docs/computations/python.qmd\n            - docs/computations/r.qmd\n            - docs/computations/julia.qmd\n            - docs/computations/ojs.qmd\n            - docs/computations/execution-options.qmd\n            - docs/computations/parameters.qmd\n        - section: \"Tools\"\n          contents:\n            - docs/tools/jupyter-lab.qmd\n            - docs/tools/rstudio.qmd\n            - docs/tools/vscode.qmd\n            - docs/tools/text-editors.qmd\n            - section: \"Visual Editor\"\n              contents:\n                - text: Editor Basics\n                  href: docs/visual-editor/index.qmd\n                - docs/visual-editor/technical.qmd\n                - docs/visual-editor/content.qmd\n                - docs/visual-editor/options.qmd\n                - docs/visual-editor/markdown.qmd\n        - section: \"Documents\"\n          contents:\n            - section: \"HTML\"\n              contents:\n                - docs/output-formats/html-basics.qmd\n                - docs/output-formats/html-code.qmd\n                - docs/output-formats/html-themes.qmd\n                - docs/output-formats/html-publishing.qmd\n            - section: \"PDF\"\n              contents:\n                - docs/output-formats/pdf-basics.qmd\n                - docs/output-formats/pdf-engine.qmd\n            - section: \"MS Word\"\n              contents:\n                - docs/output-formats/ms-word.qmd\n                - docs/output-formats/ms-word-templates.qmd\n            - section: \"Markdown\"\n              contents:\n                - docs/output-formats/gfm.qmd\n                - docs/output-formats/hugo.qmd\n                - docs/output-formats/docusaurus.qmd\n            - docs/output-formats/all-formats.qmd\n        - section: \"Presentations\"\n          contents:\n            - text: \"Overview\"\n              href: docs/presentations/index.qmd\n            - section: docs/presentations/revealjs/index.qmd\n              contents:\n                - text: \"Reveal Basics\"\n                  href: docs/presentations/revealjs/index.qmd\n                - docs/presentations/revealjs/presenting.qmd\n                - docs/presentations/revealjs/advanced.qmd\n                - docs/presentations/revealjs/themes.qmd\n            - docs/presentations/powerpoint.qmd\n            - docs/presentations/beamer.qmd\n        - section: \"Websites\"\n          href: docs/websites/website-basics.qmd\n          contents:\n            - docs/websites/website-basics.qmd\n            - docs/websites/website-navigation.qmd\n            - docs/websites/website-blog.qmd\n            - docs/websites/website-search.qmd\n            - docs/websites/website-tools.qmd\n            - docs/websites/website-about.qmd\n            - section: \"Listing Pages\"\n              href: docs/websites/website-listings.qmd\n              contents:\n                - docs/websites/website-listings.qmd\n                - docs/websites/website-listings-custom.qmd\n        - section: \"Books\"\n          href: docs/books/book-basics.qmd\n          contents:\n            - docs/books/book-basics.qmd\n            - docs/books/book-structure.qmd\n            - docs/books/book-crossrefs.qmd\n            - text: \"Customizing Output\"\n              href: docs/books/book-output.qmd\n        - section: \"Interactivity\"\n          contents:\n            - text: \"Overview\"\n              href: docs/interactive/index.qmd\n            - section: docs/interactive/ojs/index.qmd\n              contents:\n                - text: \"Introduction\"\n                  href: docs/interactive/ojs/index.qmd\n                - docs/interactive/ojs/libraries.qmd\n                - docs/interactive/ojs/data-sources.qmd\n                - docs/interactive/ojs/ojs-cells.qmd\n                - docs/interactive/ojs/shiny.qmd\n                - docs/interactive/ojs/code-reuse.qmd\n                - section: \"Examples\"\n                  contents:\n                    - docs/interactive/ojs/examples/penguins.qmd\n                    - docs/interactive/ojs/examples/sunburst.qmd\n                    - docs/interactive/ojs/examples/arquero.qmd\n                    - docs/interactive/ojs/examples/population.qmd\n                    - docs/interactive/ojs/examples/noaa-co2.qmd\n                    - docs/interactive/ojs/examples/github.qmd\n                    - docs/interactive/ojs/examples/layout.qmd\n                    - section: \"Shiny\"\n                      contents:\n                        - text: \"K-Means\"\n                          href: https://jjallaire.shinyapps.io/kmeans-shiny-ojs/\n                        - text: \"Binning\"\n                          href: https://jjallaire.shinyapps.io/binning-shiny-ojs/\n                        - text: \"Data Binding\"\n                          href: https://jjallaire.shinyapps.io/data-shiny-ojs/\n                        - text: \"Covid Map\"\n                          href: https://jjallaire.shinyapps.io/covid19-bicartogram/\n            - section: docs/interactive/shiny/index.qmd\n              contents:\n                - text: \"Introduction\"\n                  href: docs/interactive/shiny/index.qmd\n                - docs/interactive/shiny/running.qmd\n                - docs/interactive/shiny/execution.qmd\n                - docs/interactive/shiny/resources.qmd\n                - section: \"Examples\"\n                  contents:\n                    - text: \"Old Faithful\"\n                      href: https://jjallaire.shinyapps.io/shiny-old-faithful/\n                    - text: \"K-Means\"\n                      href: https://jjallaire.shinyapps.io/shiny-k-means/\n                    - text: \"Diamonds\"\n                      href: https://jjallaire.shinyapps.io/shiny-diamonds/\n            - section: \"Widgets\"\n              contents:\n                - docs/interactive/widgets/jupyter.qmd\n                - docs/interactive/widgets/htmlwidgets.qmd\n            - docs/interactive/layout.qmd\n        - section: \"Publishing\"\n          contents:\n            - docs/publishing/index.qmd\n            - docs/publishing/quarto-pub.qmd\n            - docs/publishing/github-pages.qmd\n            - docs/publishing/rstudio-connect.qmd\n            - docs/publishing/netlify.qmd\n            - docs/publishing/other.qmd\n            - text: \"Publishing with CI\"\n              href: docs/publishing/ci.qmd\n        - section: \"Projects\"\n          contents:\n            - docs/projects/quarto-projects.qmd\n            - docs/projects/code-execution.qmd\n            - docs/projects/profiles.qmd\n            - docs/projects/environment.qmd\n            - docs/projects/scripts.qmd\n            - docs/projects/virtual-environments.qmd\n        - section: \"Advanced\"\n          contents:\n            - docs/authoring/includes.qmd\n            - docs/authoring/variables.qmd\n            - docs/output-formats/page-layout.qmd\n            - docs/authoring/language.qmd\n            - docs/authoring/conditional.qmd\n            - docs/extensions/nbfilter.qmd\n    - id: extensions\n      title: \"Extensions\"\n      contents:\n        - \"---\"\n        - section: docs/extensions/index.qmd\n          contents: \n            - text: \"Shortcodes & Filters\"\n              href: docs/extensions/listing-filters.qmd\n            - text: \"Journal Articles\"\n              href: docs/extensions/listing-journals.qmd\n            - text: \"Custom Formats\"\n              href: docs/extensions/listing-formats.qmd\n            - text: \"Revealjs Extensions\"\n              href: docs/extensions/listing-revealjs.qmd\n            - docs/extensions/managing.qmd\n        - \"---\"\n        - section: docs/extensions/creating.qmd\n          contents:\n            - text: \"Overview\"\n              href: docs/extensions/creating.qmd\n            - docs/extensions/lua.qmd\n            - docs/extensions/lua-api.qmd\n            - text: \"Distribution\"\n              href: docs/extensions/distributing.qmd\n            - \"---\"\n            - text: \"Shortcodes\"\n              href: docs/extensions/shortcodes.qmd\n            - text: \"Filters\"\n              href: docs/extensions/filters.qmd\n            - section: \"Journal Articles\"\n              href: docs/journals/formats.qmd\n              contents:\n                - docs/journals/formats.qmd\n                - docs/journals/templates.qmd\n                - docs/journals/authors.qmd\n            - docs/extensions/formats.qmd\n            - docs/extensions/revealjs.qmd\n            - docs/extensions/project-types.qmd\n            - docs/extensions/starter-templates.qmd\n\n    - id: reference\n      title: \"Reference\"\n      contents:\n        - text: \"Reference\"\n          href: docs/reference/index.qmd\n        - section: \"Formats\"\n          contents:\n            - text: \"HTML\"\n              href: docs/reference/formats/html.qmd\n            - text: \"PDF\"\n              href: docs/reference/formats/pdf.qmd\n            - text: \"MS Word\"\n              href: docs/reference/formats/docx.qmd\n            - text: \"OpenOffice\"\n              href: docs/reference/formats/odt.qmd\n            - text: \"ePub\"\n              href: docs/reference/formats/epub.qmd\n            - section: \"Presentations\"\n              contents:\n                - text: \"Revealjs\"\n                  href: docs/reference/formats/presentations/revealjs.qmd\n                - text: \"PowerPoint\"\n                  href: docs/reference/formats/presentations/pptx.qmd\n                - text: \"Beamer\"\n                  href: docs/reference/formats/presentations/beamer.qmd\n            - section: \"Markdown\"\n              contents:\n                - text: \"GitHub\"\n                  href: docs/reference/formats/markdown/gfm.qmd\n                - text: \"CommonMark\"\n                  href: docs/reference/formats/markdown/commonmark.qmd\n                - text: \"Markua\"\n                  href: docs/reference/formats/markdown/markua.qmd\n            - section: \"Wikis\"\n              contents:\n                - text: \"MediaWiki\"\n                  href: docs/reference/formats/wiki/mediawiki.qmd\n                - text: \"DokuWiki\"\n                  href: docs/reference/formats/wiki/dokuwiki.qmd\n                - text: \"ZimWiki\"\n                  href: docs/reference/formats/wiki/zimwiki.qmd\n                - text: \"Jira Wiki\"\n                  href: docs/reference/formats/wiki/jira.qmd\n                - text: \"XWiki\"\n                  href: docs/reference/formats/wiki/xwiki.qmd\n            - section: \"More Formats\"\n              contents:\n                - text: \"JATS\"\n                  href: docs/reference/formats/jats.qmd\n                - text: \"Jupyter\"\n                  href: docs/reference/formats/ipynb.qmd\n                - text: \"ConTeXt\"\n                  href: docs/reference/formats/context.qmd\n                - text: \"RTF\"\n                  href: docs/reference/formats/rtf.qmd\n                - text: \"reST\"\n                  href: docs/reference/formats/rst.qmd\n                - text: \"AsciiDoc\"\n                  href: docs/reference/formats/asciidoc.qmd\n                - text: \"Org-Mode\"\n                  href: docs/reference/formats/org.qmd\n                - text: \"Muse\"\n                  href: docs/reference/formats/muse.qmd\n                - text: \"GNU TexInfo\"\n                  href: docs/reference/formats/texinfo.qmd\n                - text: \"Groff Man Page\"\n                  href: docs/reference/formats/man.qmd\n                - text: \"Groff Manuscript\"\n                  href: docs/reference/formats/ms.qmd\n                - text: \"Haddock markup\"\n                  href: docs/reference/formats/haddock.qmd\n                - text: \"OPML\"\n                  href: docs/reference/formats/opml.qmd\n                - text: \"Textile\"\n                  href: docs/reference/formats/textile.qmd\n                - text: \"DocBook\"\n                  href: docs/reference/formats/docbook.qmd\n                - text: \"InDesign\"\n                  href: docs/reference/formats/icml.qmd\n                - text: \"TEI Simple\"\n                  href: docs/reference/formats/tei.qmd\n                - text: \"FictionBook\"\n                  href: docs/reference/formats/fb2.qmd\n        - section: \"Code Cells\"\n          contents:\n            - text: \"Jupyter\"\n              href: docs/reference/cells/cells-jupyter.qmd\n            - text: \"Knitr\"\n              href: docs/reference/cells/cells-knitr.qmd\n            - text: \"Observable\"\n              href: docs/reference/cells/cells-ojs.qmd\n        - section: \"Projects\"\n          contents:\n            - text: \"Options\"\n              href: docs/reference/projects/options.qmd\n            - text: \"Websites\"\n              href: docs/reference/projects/websites.qmd\n            - text: \"Books\"\n              href: docs/reference/projects/books.qmd\n        - section: \"More\"\n          contents:\n            - text: \"Dates\"\n              href: docs/reference/dates.qmd\n            - text: \"Globs\"\n              href: docs/reference/globs.qmd\n            - text: \"Citations\"\n              href: docs/reference/metadata/citation.qmd\n\nbibliography: references.bib\n\nformat:\n  html:\n    toc: true\n    theme:\n      light: [cosmo, theme.scss]\n    code-copy: true\n    code-overflow: wrap\n    css: styles.css\n    include-after-body: js.html\n\nfilters:\n  - filters/tools-tabset.lua\n\n\nfreeze: true\n\neditor: visual\n\nprofile:\n  group: \n    - [rc, prerelease]\n```\n\n\n:::\n:::\n\n------------------------------------------------------------------------\n\n::: {.callout-important icon=\"false\"}\n#### Tarea 5.1: Modificar `_quarto.yml`\n\n- Tenemos que dejar el archivo `_quarto.yml` así:\n\n::: {.cell}\n\n```{.r .cell-code .code-overflow-scroll  code-line-numbers=\"true\"}\n# 1/ Opciones referentes al proyecto ----------------------------\nproject:\n  type: website\n  output-dir: _site    \n \n#- 2/ Opciones referentes a la estructura de la web -----------------\nwebsite:\n  title: \"Mi blog (aún en pruebas)\"\n  navbar:\n    logo: \"profile.jpg\"\n    #background: \"#CCCCFF\"    #- {“primary”, “secondary”,  “danger”, “warning”, “light”, “dark”, or hex color} (el backgroung de la navbar)\n    right:\n      - text: \"Mi blog\"\n        href: blog.qmd\n      - icon: github\n        href: https://github.com/<tu-usuario-github>\n      - icon: twitter\n        href: https://twitter.com/<tu-usuario-twitter>\n      - icon: envelope\n        url: \"mailto:<tu-mail@uv.es>\"\n    left: \n      - icon: house-door\n        href: index.html\n      - text: \"Docencia\"\n        href: docencia.qmd\n      #- text: \"Docencia\"\n        #href: docencia.qmd\n  page-footer:\n    left: \"© 2022 Pedro J. Pérez\"\n    center: \"Hecho con [Quarto](https://quarto.org)\"\n    right:\n      - icon: github\n        href: https://github.com/<tu-usuario-github>\n      - icon: twitter\n        href: https://twitter.com/<tu-usuario-twitter>\n      - icon: envelope\n        url: \"mailto:<tu-mail>@uv.es\"\n\n#- 3/ Opciones referentes al formato de salida  ---------------------\nformat:\n  html:\n    #- https://quarto.org/docs/output-formats/html-themes.html\n    theme: flatly  \n    css: styles.css\n    toc: true\n    #- https://quarto.org/docs/output-formats/html-code.html#highlighting\n    highlight-style: a11y     \n```\n:::\n\n\n:::\n\n\n\n\n\n\n------------------------------------------------------------------------\n\n### YAML nivel carpeta\n\n-   Abajo el, contenido del fichero `./posts/_metadata.yml` de nuestro blog\n\n![](./imagenes/tt_01/img_24.png){fig-align=\"center\"}\n\n\n\n\n------------------------------------------------------------------------\n\n### YAML nivel carpeta\n\n<br>\n\n::: {.callout-important icon=\"false\"}\n#### Tarea 5.2: Modificar `./posts/_metadata.yml` \n\n- Tenemos que dejar el archivo `./posts/_metadata.yml`  así:\n\n\n::: {.cell}\n\n```{.r .cell-code .code-overflow-scroll  code-line-numbers=\"true\"}\n# IMPORTANTE: options specified here will apply to all posts in this folder\n\n# freeze: controla la ejecución de los .qmd durante un global project render\n# https://quarto.org/docs/projects/code-execution.html#freeze)\nfreeze: auto   #- {false, true, auto}\n\n#- Quarto incluye un title-block al principio de los artículos con elementos como: title, subtitle, authors, date, doi, and abstract.\n\n# title-block-banner: pone un banner en el title-block: pondrá el title, subtitle, description, y categories dentro del banner\n# https://quarto.org/docs/authoring/title-blocks.html#title-banners\ntitle-block-banner: true  #- {true, false, \"#FFDDFF\",  \"image.jpg\"}\n\n# title-block-style: modifica el estilo del title-block\n# https://quarto.org/docs/authoring/title-blocks.html\ntitle-block-style: default #- {default, plain, none}\n\n# tb se puede especificar el color del texto dentro del banner\ntitle-block-banner-color: red\n```\n:::\n\n **IMPORTANTE**: las opciones que especifiques en `_metadata.yml` afectarán a todos los .qmd de la carpeta.\n\n- `freeze (linea 5): {false, true, auto}` controla la ejecución de los .qmd durante el procesado completo del Qproject. Documentación [aquí](https://quarto.org/docs/projects/code-execution.html#freeze).\n\n- `title-block-banner (linea 11): {true, false, \"#FFDDFF\",  \"image.jpg\"}` controla la presencia y apariencia de los \"banners\" para dar más importancia a los títulos de los posts. Puedes controlar el color, incluso poner una imagen. Documentación [aquí](https://quarto.org/docs/authoring/title-blocks.html#title-banners). \n\n- `title-block-style (linea 15):  {default, plain, none}` modifica el estilo del title-block\n\n\n- `title-block-banner-color(linea 18): {black, \"#FFDDFF\"}` controla el color del título del post\n\n:::\n\n\n\n------------------------------------------------------------------------\n\n### YAML: nivel documento\n\n<br>\n\n::: {.callout-important icon=\"false\"}\n#### Tarea 5.3: Modificar encabezamiento de `./posts/my-primer-post/index.qmd` \n\n- Tenemos que dejar el archivo `./posts/my-primer-post/index.qmd` así:\n\n\n````markdown\n---\ntitle: \"Mi primer post con Quarto\"\ndescription: |\n  Estoy aprendiendo Quarto\nauthor:\n  - name: Pedro J. Pérez\n    url: https://www.wikidata.org\n    affiliation: Universitat de València\n    affiliation-url: https://www.uv.es\n    orcid: 0000-xxxx\ndate: \"2022-10-25\"\ncategories: [R, quarto]\n#title-block-banner: true #- {true, false }\ntitle-block-banner: thumbnail.jpg\ntitle-block-banner-color: green\n---\n\nEste es mi **primer post** con Quarto!!!!\n\n```{{r}}\nsqrt(2 + 2)\n```\n\nVoy a poner una imagen:\n\n![](thumbnail.jpg)\n\nAcabé con mi primer post. FIN\n  \n````\n\n- Sustituye `thumbnail.jpg` por otro archivo\n\n\n- Vuelve a regenerar el blog: `Build > Render Website`\n:::\n\n\n\n# 2. TEXTO (o narrativas) {.unnumbered background-color=\"#b8c2aa\"}\n\n------------------------------------------------------------------------\n\n### Texto (o narrativas) {.smaller}\n\n-   Se escribe (al igual que `.Rmd`) en **markdown**. [Aquí](https://quarto.org/docs/authoring/markdown-basics.html) la documentación oficial de Quarto.\n\n-   Sintaxis básica de `markdown`\n\n::: { layout-ncol=1}\n\n![](./imagenes/tt_01/img_20_markdown.png){fig-align=\"center\"  width=\"100%\"}\n\n:::\n\n\n\n# 3. CHUNKS {.unnumbered background-color=\"#b8c2aa\"}\n\n------------------------------------------------------------------------\n\n### CHUNKS\n\n**Comportamiento similar** a los documentos `.Rmd`. La documentación oficial está [aquí](https://quarto.org/docs/computations/execution-options.html)\n\n<br>\n\n##### Principales diferencias con .Rmd\n\n-   En ficheros `.qmd`, **las opciones de los chunks se pueden especificar globalmente en el YAML** y a nivel individual en cada uno de los chunks.\n\n-   En los **chunks individuales** ahora se se utiliza la **sintaxis YAML** (`key: value`) en lineas dentro del chunk que empiezan con `#|`. Por ejemplo:\n\n\n![](./imagenes/tt_01/img_22.png){fig-align=\"center\"}\n\n\n\n\n------------------------------------------------------------------------\n\n### CHUNKS\n\n-   Las principales opciones son: **echo**, **eval**, **warning**, **error**, **output** e **include**. [Aquí](https://quarto.org/docs/computations/execution-options.html#output-options) la documentación oficial.\n\n-   `echo`: además de los típicos true y false, ahora **incorpora un nuevo valor `fenced`** que facilita mostrar las marcas de los chunks en el documento final. Documentación [aquí](https://quarto.org/docs/computations/execution-options.html#fenced-echo).\n\n-   Además, si usamos `knitr` para ejecutar los chunks, entonces podemos usar todas las [opciones nativas de `knitr`](https://yihui.org/knitr/options/), como: collapse, fig.width, comment, etc ... Más información [aquí](https://quarto.org/docs/computations/execution-options.html#knitr-options). Un ejemplo:  \n\n\n![](./imagenes/tt_01/img_23.png){fig-align=\"center\"}\n\n\n\n![](./imagenes/tt_01/img_23.png){fig-align=\"center\"}\n\n\n\n\n\n\n-   Hay **más opciones para los chunks**. Por ejemplo:\n\n    -   hacer **folding code** con `#| code-fold: true`\n\n    -   si el código es muy largo, puedes usar `#| code-overflow: wrap` o  scroll\n\n    -   puedes hacer que se muestren los **números de linea** con `#| code-line-numbers: true`\n\nLa documentación oficial la tienes [aquí](https://quarto.org/docs/output-formats/html-code.html).\n\n# 4. Elementos básicos para escribir {.unnumbered background-color=\"#b8c2aa\"}\n\n------------------------------------------------------------------------\n\n### Elementos básicos para escribir\n\n<br>\n\nPara escribir en Markdown, además de texto, tenemos los siguientes elementos básicos:\n\n\n\n- Links (documentación [aquí](https://quarto.org/docs/authoring/markdown-basics.html#links-images))\n\n- Listas  (documentación [aquí](https://quarto.org/docs/authoring/markdown-basics.html#lists))  \n\n- Tablas  (documentación [aquí](https://quarto.org/docs/authoring/markdown-basics.html#tables))  \n\n- Código  (documentación [aquí](https://quarto.org/docs/authoring/markdown-basics.html#source-code))  \n\n- Ecuaciones  (documentación [aquí](https://quarto.org/docs/authoring/markdown-basics.html#equations)). Editor de ecuaciones [aquí](https://www.latex4technics.com/)  o [aquí](http://www.sciweavers.org/free-online-latex-equation-editor).\n\n\n- Imágenes (documentación [aquí](https://quarto.org/docs/authoring/figures.html)) y sus [opciones](https://quarto.org/docs/computations/execution-options.html#figure-options)\n\n\n<br>\n\nEl [editor visual](https://www.rstudio.com/blog/exploring-rstudio-visual-markdown-editor/) facilita la introducción de estos elementos en tus documentos. En [esta charla](https://www.youtube.com/watch?v=6p4vOKS6Xls) de Mine Çetinkaya-Rundel se aprecia fácilmente la **utilidad del editor visual**.\n\n\n\n# 5. Más elementos para \"escribir\" {.unnumbered background-color=\"#b8c2aa\"}\n\n------------------------------------------------------------------------\n\n### Más elementos para \"escribir\"\n\nAdemás de los elementos básicos de escritura que nos ofrece la sintaxis básica de `markdown`, **Quarto nos ofrece más posibilidades**. Por ejemplo:\n\n<br>\n\n\n- Imágenes (documentación [aquí](https://quarto.org/docs/authoring/figures.html)) y sus [opciones](https://quarto.org/docs/computations/execution-options.html#figure-options)\n\n- Callout blocks  (documentación [aquí](https://quarto.org/docs/authoring/markdown-basics.html#callout-blocks))  \n\n- Divs & spans  (documentación [aquí](https://quarto.org/docs/authoring/markdown-basics.html#divs-and-spans))  \n\n- Layout (documentación [aquí](https://quarto.org/docs/authoring/article-layout.html)  y [aquí](https://quarto.org/docs/authoring/article-layout.html))\n\n- Extensiones (documentación [aquí](https://quarto.org/docs/extensions/starter-templates.html)) . Listado de extensiones oficiales [aquí](https://quarto.org/docs/extensions/listing-filters.html)\n\n\n<br>\n\nVeamos algunos de estos elementos con un poco de detalle. Después lo recordaremos con una Práctica.\n\n\n\n\n\n# Veamos algunos de estos elementos con un poco de detalle. {.unnumbered background-color=\"#b8c2aa\"}\n\n<br><br>\n\n(Después lo recordaremos con una Práctica)\n\n------------------------------------------------------------------------\n\n\n\n#### Layouts {.unnumbered}\n\n\n- Además de yaml, texto y chunk, para escribir con Quarto **conviene conocer la estructura o layout de los artículos** que se generan con él.\n\n- Los \"artículos\" tienen un **body**, un **margin** y un área para las **sidebars**, que en nuestro caso contiene el TOC^[Además, el layout puede venir afectado por la opción `page-layout: custom   #- {article, full, custom}`]. \n\n\n- Usando **divs** se puede hacer que **alguna sección de nuestra página ocupe un espacio mayor al habitual**; es decir, mayor al espacio habitualmente reservado para el body.\n\n\n- Veamos las **posibilidades que tenemos de layout** con [este post](/posts/post_01_layout.html){target=\"_blank\"} \n\n<br>\n\n---\n\n#### Extensiones {.unnumbered}\n\n- Una de las novedades de Quarto es la posibilidad de usar **extensiones**.  Las extensiones se escriben en lenguaje [Lua](https://es.wikipedia.org/wiki/Lua). \n\n- Para ver como **instalar y usar extensiones** vamos a ir, otra vez, a otro de los post del blog del taller: concretamente [aquí](/posts/post_02_extensiones.html){target=\"_blank\"}  \n\n\n<br>\n\n---\n\n#### Imágenes {.unnumbered}\n\n- Conocemos la sintaxis básica para insertar imágenes `![](<ruta-a-imagen>)`; ahora veremos posibilidades más avanzadas\n\n- Veamos como **insertar imágenes** con [este post](/posts/post_03_imagenes.html){target=\"_blank\"} del blog del taller.\n\n<br>\n\n\n\n------------------------------------------------------------------------\n\n::: {.callout-note collapse=\"true\" appearance=\"default\" icon=\"false\"}\n#### Resumen (tutorial nº 5)\n\n- La **quinta parte del taller** se ocupa de la **escritura de posts** para el blog. \n\n- Los posts **se han de escribir en formato `.qmd`**; por lo tanto, se repasan  los fundamentos \"teóricos\" necesarios para escribir este tipo de documentos.\n\n- Nos apoyamos en nuestro **conocimiento previo de la sintaxis Rmarkdown**.\n\n- Se repasan las posibilidades de configurar los documentos por medio de **los 3 niveles de YAML** que pueden afectar a un documento.\n\n-  **Los 3 YAML's** son: Nivel proyecto (`_quarto.yml`), nivel carpeta (`_metadata.yml`) y nivel documento (en el propio encabezamiento del archivo)\n\n- El **texto** en ficheros `.qmd` es muy similar al de los documentos `.qmd`. Aparecen algunos elementos nuevos como los Call-outs.\n\n- El **código** sí presenta novedades: nueva sintaxis con `#|` y posibilidad de determinar opciones de los chunks en el YAML.\n\n- Para poder escribir en `.qmd` **hay que practicar**. Lo haremos con una tarea donde veremos, entre otras cosas:\n\n    - Algunas de las opciones de **layout**.\n\n    - Ver como instalar y usar **extensiones**.\n    \n    - Opciones avanzadas para **insertar imágenes**.\n\n\n:::\n\n\n\n<br>\n\n------------------------------------------------------------------------\n\n::: {.callout-tip collapse=\"true\" appearance=\"default\" icon=\"false\"}\n\n#### Práctica 5.1: Crear un post para tu blog con la siguiente plantilla.\n\nVamos a crear un nuevo post para practicar algunos de los elementos de escritura que hemos visto.  Para ello:\n\n- Crea una nueva subcarpeta en la carpeta `./posts/`. Por ejemplo llámala: `./posts/my-segundo-post` y copia allí los documentos que haya en la carpeta de otro blog. Es decir, en la nueva subcarpeta que has creado debe haber un fichero `index.qmd` y una imágen `thumbnail.jpg`.\n\n- Sustituye el contenido del archivo `index.qmd` por el contenido del siguiente chunk y haz un render de `./posts/my-segundo-post/index.qmd` para ver como quedaría una vez procesado.\n\n\n###### Contenido para sustituir en `./posts/my-segundo-post/index.qmd`\n\n\n````markdown\n---\ntitle: \"Mi Segundo post con Quarto\"\nauthor: \"Nosotros\"\ndate: 2022-10-25\ncategories: [R, quarto, ejemplos]\nimage: \"thumbnail.jpg\"\n#subtitle: | \n#  Practicando con Quarto\ndescription: |\n  Estamos viendo algunos elementos para escribir con Quarto.\n---\n\nEste ya es mi segundo post con Quarto. En él voy a hacer lo siguiente:\n\n\n## Insertar 2 imágenes side-by-side\n\n\n## Inserta un tweet\n\n\n## Inserta un `tab-set`\n\n\n## Inserta un call-out\n\n\n## Inserta un gráfico en el margen\n\n\n<br>\n\nPrueba superada!!\n\n\nAcabé con mi segundo post. FIN\n  \n````\n\n:::\n\n\n\n\nLas soluciones a la Práctica están [aquí](/posts/post_04_practica-05.html)\n\n<br>\n\n# 6. Tuneado del blog {background-color=\"#EEBF8B\"}\n\n(6ª parte del tutorial)\n\n::: {.callout-tip  appearance=\"default\" icon=\"false\"}\n## ¿Qué haremos en este tutorial?\n\n- Ver distintas opciones para adaptar el blog a nuestras necesidades\n\n\n- En concreto veremos 3 formas de hacerlo: a través de opciones de Quarto en el yaml, con CSS y con SASS\n\n:::\n\n\n\n<br>\n\n------------------------------------------------------------------------\n\n## Intro\n\n-   Quarto viene preparado con diferentes `Bootstrap themes` del [proyecto Bootswatch project](https://bootswatch.com/) que le dan a nuestro blog una apariencia profesional y cuidada.\n\n<br>\n\n-   Creo que es mejor **comenzar con un blog sencillo** usando las plantillas (o themes) que nos ofrece Quarto pero, si queremos modificar la apariencia de nuestro blog, podemos hacerlo de 3 formas:\n\n    1.  Utilizando las opciones disponibles en Quarto para el `yaml`\n\n    2.  Utilizando CSS\n\n    3.  Utilizando SASS\n\n# 1. Utilizando opciones del YAML {.unnumbered background-color=\"#b8c2aa\"}\n\n<br>\n\n-   En el [tutorial nº 6](/taller/06_taller_tuneado-del-blog.html) repasamos las distintas opciones que tenemos disponibles para poder cambiar a través de opciones en los YAML's (recuerda los 3 niveles).\n\n-   Aquí solo pondré la **documentación relevante** junta y **destacaré algunas de las opciones** disponibles.\n\n------------------------------------------------------------------------\n\n## Documentación oficial\n\n##### (sobre opciones disponibles en los YAML's)\n\n<br>\n\n-   Referentes al **proyecto**: [aquí](https://quarto.org/docs/projects/quarto-projects.html#shared-metadata)\n\n-   Referentes a la **estructura de la web**: [aquí](https://quarto.org/docs/websites/website-navigation.html) y [aquí](https://quarto.org/docs/websites/)\n\n-   Referentes a la **estética**: [aquí](https://quarto.org/docs/output-formats/html-basics.html) y [aquí](https://quarto.org/docs/reference/formats/html.html)\n\n- Referentes a las **Listing Pages**: [aquí](https://quarto.org/docs/websites/website-listings.html)\n\n\n- Referentes a las **About Pages**: [aquí](https://quarto.org/docs/websites/website-about.html)\n\n\n# Algunas opciones de YAML {.unnumbered background-color=\"#b8c2aa\"}\n\n---\n\n## Algunas opciones de YAML (**lang**)\n\n- Si te has fijado, los metadatos de los documentos aparecen en inglés.\n\n- Por ejemplo, pone \"Author\" en lugar de \"Autor\" o \"Autora\".\n\n<br>\n\n#### Hagamos algunos cambios\n\n\n- Si quisiéramos cambiar específicamente la opción de autor, tendríamos que poner en el YAML:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlanguage: \n  title-block-author-single: \"Autora\"\n```\n:::\n\n\n\n- Podemos cambiar todas las opciones especificando en el YAML   `lang: es`. \n\n- La documentación oficial está [aquí](https://quarto.org/docs/authoring/language.html) y [aquí](https://github.com/quarto-dev/quarto-cli/blob/main/src/resources/language/_language.yml) todos los elementos que se pueden modificar. Y [aquí](https://github.com/quarto-dev/quarto-cli/tree/main/src/resources/language) los ficheros específicos para diferentes idiomas. [Aquí](https://github.com/quarto-dev/quarto-cli/blob/main/src/resources/language/_language-es.yml) el documento para el castellano.\n\n<br>\n\n- Si quisieras usar tu propio documento tendrías que poner en el YAML: `language: custom.yml` (lógicamente el fichero `custom.yml` tendría que existir y estar en la ruta correcta).\n\n- ¿Probamos a hacerlo?\n\n\n\n---\n\n## Otras opciones para tunear desde el YAML \n\n- **TOC**: es importante tenerlo a nuestro gusto. [Aquí](https://quarto.org/docs/reference/formats/html.html#table-of-contents) tienes las opciones que puedes ajustar con opciones en el yaml\n\n- **Chunks**: [aquí](https://quarto.org/docs/reference/formats/html.html#code) tienes las opciones que puedes ajustar desde el YAML\n\n- **Resizing de los thumbnails**. Un [gist](https://gist.github.com/perezp44/fc5a3853039fd29ff94c5b8488fea0a1#file-resize_thumbnails-r)  para hacerlo.\n\n\n- **Algunas opciones de tuneado** que puedes implementar desde el YAML. Prueba a poner estas opciones en el archivo `_quarto.yml`. Nuestro blog **empeorará bastante**. Más opciones [aquí](https://quarto.org/docs/output-formats/html-themes.html#basic-options).\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfontcolor: green          #- color del texto\nlinkcolor: purple         #- color de los enlaces\nmonobackgroundcolor: red  #- color de los cuadros de resultados de evaluar código\nfontsize: 0.6em           #- tamaño del texto (más pequeño de lo normal: 1)\nlinestretch: 2.3          #- tamaño entre las lineas (1.6 es lo \"normal\")\n```\n:::\n\n\n\n\n# 2. Utilizando CSS {.unnumbered background-color=\"#b8c2aa\"}\n\n<br>\n\n-   La apariencia visual del blog puede cambiarse utilizando CSS.\n\n-   Veamos un ejemplo con el siguiente [post](/posts/post_05_css.html)\n\n# 3. Utilizando SASS {.unnumbered background-color=\"#b8c2aa\"}\n\n\n- La documentación oficial [aquí](https://quarto.org/docs/output-formats/html-themes.html#sass-variables)\n\n\n-   [Aquí](https://quarto.org/docs/output-formats/html-themes-more.html) la documentación oficial de Quarto sobre los Bootswatch Sass Theme Files.\n\n-   Bootstrap define unas 1.400 variables con las que controlar fuentes, colores, etc ... . Puedes verlas [aquí](https://github.com/twbs/bootstrap/blob/main/scss/_variables.scss)\n\n-   [Aquí](https://github.com/quarto-dev/quarto-cli/tree/main/src/resources/formats/html/bootstrap/themes) están los ficheros `.scss` de los 25 built-in Bootswatch themes.\n\n<br>\n\n- **Otras referencias**, por ejemplo: [Customizing Quarto Websites: Make your website stand out using SASS](https://ucsb-meds.github.io/customizing-quarto-websites/#/title-slide) o [este video](https://www.youtube.com/watch?v=ErRX8plZpQE)\n\n- Tengo una \"práctica\" en el [tutorial nº 6](../taller/06_taller_tuneado-del-blog.html) del taller.\n\n\n# Publicando el blog {.unnumbered background-color=\"#b8c2aa\"}\n\n<br>\n\n- La [documentación oficial](https://quarto.org/docs/publishing/) de Quarto.\n\n- Si lo publicamos en [Quarto Pub](https://quarto.org/docs/publishing/quarto-pub.html), ejecutar en la Terminal: `quarto publish quarto-pub`\n\n- En [Github Pages](https://quarto.org/docs/publishing/github-pages.html)\n    \n    \n\n\n\n# Fin!! {.unnumbered .centered background-color=\"#562457\"}\n\n-   Muchas gracias por la atención :slightly_smiling_face:\n\n-   Espero que el taller haya salido OK :white_check_mark:\n\n-   Si alguien motivado por el taller acaba haciéndose un blog, **please que me avise** (pedro.j.perez\\@uv.es) :mailbox: \n\n<br>\n\n-   Big thanks to all the Posit/Quarto team !!!! 👏🏼👏🏼 🙌🏼\n\n<br>\n\n-   Bye 👋🏼 👋🏼 , nos vemos en las próximas Jornadas en ...",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}