{
  "hash": "be57cab7ba4ec0d2ce9b012b1b2427ab",
  "result": {
    "markdown": "---\ntitle: \"Tuneado del blog\"\nsubtitle: \"(6ª parte del taller [Mi primer blog con Quarto](https://perezp44.github.io/taller.primer.blog/))\"\ntitle-block-banner: true\ntitle-block-banner-color : \"#562457\"\ntoc-title: Tutorial nº 6\ntoc-depth: 4\n---\n::: {.callout-note collapse=\"true\" appearance=\"default\" icon=\"false\"}\n#### Contexto\n\n-  Tutorial preparado para el taller **Mi primer blog con Quarto** impartido en Córdoba (Spain) durante el [I Congreso & XII Jornadas de Usuarios de R](http://r-es.org/12jr/), 23-25 de noviembre de 2022.\n-   El taller está pensado para realizar con [R](https://cran.r-project.org/). Se utilizará el IDE [RStudio](https://www.rstudio.com/products/rstudio/) y [Quarto](https://quarto.org/). Se recomienda tener instaladas **versiones recientes** de los 3 programas\n\n- Este tutorial es sólo una parte del taller. El **taller completo** está [aquí](https://perezp44.github.io/taller.primer.blog/).\n:::\n\n\n\n\n::: {.callout-note collapse=\"true\" appearance=\"default\" icon=\"false\"}\n## Recapitulación\n-   En esta sexta parte del taller veremos con un poco más de detalle como \"mejorar\" la apariencia de nuestro blog.\n\n-   Las anteriores secciones del taller son:\n\n    1. **Intro**: se presenta el taller\n\n    2. **Creación de un blog (básico) con Quarto**: vimos como crear y alojar un **blog básico** con RStudio y Quarto.\n    \n    3. **Tuneado básico del blog**: modificamos ligeramente los ficheros `_quarto.yml`, `index.qmd`, `about.qmd` y `styles.css`.\n    \n    4. **Workflow: ¿cómo crear un post?**: vimos como generar nuevos posts para nuestro blog.\n    \n    5. **Escribiendo posts: prácticando con Quarto**. Vimos diversos elementos como div, call-outs etc... disponibles en Quarto para escribir posts.\n:::\n\n\n------------------------------------------------------------------------\n\n<br>\n\n\n::: {.callout-tip  appearance=\"default\" icon=\"false\"}\n## ¿Qué haremos en este tutorial?\n\n- Ver distintas opciones para adaptar el blog a nuestras necesidades\n\n\n- En concreto veremos 3 formas de hacerlo: a través de opciones de Quarto en el yaml, con CSS y con SASS\n\n:::\n\n\n\n<br>\n\n## Intro\n\nQuarto  viene preparado con diferentes `Bootstrap themes` del  [proyecto Bootswatch project](https://bootswatch.com/) que le dan a nuestro blog una apariencia profesional y cuidada; pero claro, todos los blogs hechos con Quarto tendrán una a apariencia similar. ¿Cómo podemos tunear/modificar un poco la apariencia de nuestro blog?\n\nEn este tutorial trataremos de dar 3 posibilidades, aunque la verdad es que creo que es mejor comenzar con un blog sencillo usando las plantillas (o themes) que nos ofrece Quarto. Si aún así nos empeñamos en modificar la apariencia de nuestro blog, podemos hacerlo de 3 formas: \n\n  - utilizando las opciones disponibles en Quarto para el `yaml`\n    \n  - utilizando CSS\n    \n  - utilizando SASS\n\n<br>    \n    \n## Opciones `YAML`\n\nEn esta sección repasaremos las opciones disponibles como opciones de `yaml`. Además recuerda que hay tres \"niveles\" de yaml: \n\n  2.1 **Nivel proyecto**: en el archivo `_quarto.yml`\n  \n  2.2 **Nivel carpeta**: en el archivo `_metadata.yml`\n  \n  2.3 **Nivel documento** (o post): en el yaml del propio documento `.qmd`\n\n<br>\n\n-----------------------\n  \n### Nivel proyecto\n\nEn el archivo `_quarto.yml` hay 3 bloques: \n\n  - Opciones referentes al proyecto\n  \n  - Opciones referentes a la estructura de la web y barra de navegación\n  \n  - Opciones digamos más \"estéticas\"\n\n<br>\n\n\n\n::: {.panel-tabset}\n\n#### 1. nivel proyecto (_quarto.yml)\n\n\nAbajo puedes ver las opciones más comunes referentes al proyecto. Yo suelo alojar las webs en el directorio `docs`, porque es el que se suele usar en Github Pages, así que sí suelo usar la linea 6.\n\n::: {.cell}\n\n```{.r .cell-code .code-overflow-scroll  code-line-numbers=\"true\"}\n# 1/ Opciones referentes al proyecto ----------------------------\n#- QUARTO PROJECTS: https://quarto.org/docs/projects/quarto-projects.html\n\nproject:\n  type: website\n  output-dir: docs        #- carpeta donde se redirige el output (.html)\n  # execute-dir: project  #- render directory: https://quarto.org/docs/projects/code-execution.html#working-dir\n  # resources:\n  #   - \"/docs/download/_download.json\"\n```\n:::\n\n\nPor supuesto que hay más opciones, puedes verlas [aquí](https://quarto.org/docs/projects/quarto-projects.html#project-metadata).\n\n\n<br>\n\n#### Estructura web\n\nEstá parte del archivo `_quarto.yml` sirve para crear la estructura de la página web: barra de navegación y sus pestañas, footer y sidebar. Yo no suelo utilizar sidebar porque no hago web's complejas y me gusta más que la barra de navegación esté arriba y no en un lateral.\n\nAbajo tienes diferentes opciones para crear la estructura de tu web^[Son las opciones que he ido recopilando y que me han parecido que pueden llegar a serme útiles algún día, por eso las recopilo, para tenerlas a mano]:\n\n::: {.cell}\n\n```{.r .cell-code .code-overflow-scroll  code-line-numbers=\"true\"}\n#- PAGINAS WEB: https://quarto.org/docs/websites/ --------------------------------------\n\n#- 2/ Opciones referentes a la estructura de la web -----------------\n#- Web navigation: https://quarto.org/docs/websites/website-navigation.html\n\nwebsite:\n  title: \"Mi blog (aún en pruebas)\"\n  favicon: profile.jpg\n  reader-mode: true  \n  # site-url: https://....\n  # repo-url: https://....\n  # repo-actions: [edit, issue]\n  search:   #- https://quarto.org/docs/websites/website-search.html\n    location: navbar #- {navbar, sidebar}\n    type: overlay   #- {overlay, textbox}\n    copy-button: true\n  open-graph: true #-https://quarto.org/docs/websites/website-tools.html#twitter-cards\n  \n  twitter-card:\n    creator: \"@tu-usuario-twitter\"\n    card-style: summary_large_image\n  body-header: | \n    This page brought to you by <https://example.com>\n  margin-header: |\n    ![Logo image](/img/logo.png)\n  # page-navigation: true\n\n  navbar:\n    logo: \"profile.jpg\"\n    #pinned: true\n    #background: \"primary\"    #- {“primary”, “secondary”, “success”, “danger”, “warning”, “info”, “light”, “dark”, or hex color} (el backgroung de la navbar)\n    #foreground: \"warning\"    #- color navigation elements, text and links that appear in the navbar.\n    #title: false\n    #collapse-below: lg\n    #pinned: true\n    right:\n      - text: \"About me\"\n        href: about.qmd\n      - icon: github\n        href: https://github.com/<tu-usuario-github>\n      - icon: twitter\n        href: https://twitter.com/<tu-usuario-twitter>\n      - icon: envelope\n        url: \"mailto:<tu-mail@uv.es>\"\n    left: \n      - icon: house-door\n        href: index.html\n      - text: \"Docencia\"\n        href: docencia.qmd\n  page-footer:\n    border: true\n    background: light\n    left: \"© 2022 Pedro J. Pérez\"\n    #left: |\n    #  Proudly supported by\n    #  [![](https://www.rstudio.com/wp-content/uploads/2018/10/RStudio-Logo-flat.svg){fig-alt=\"RStudio\" width=65px}](https://www.rstudio.com)\n    center: \"Hecho con [Quarto](https://quarto.org)\"\n    right:\n      - icon: github\n        href: https://github.com/<tu-usuario-github>\n      - icon: twitter\n        href: https://twitter.com/<tu-usuario-twitter>\n      - icon: envelope\n        url: \"mailto:<tu-mail>@uv.es\"\n```\n:::\n\nPor supuesto que hay más opciones, puedes verlas [aquí](https://quarto.org/docs/websites/website-navigation.html) y [aquí](https://quarto.org/docs/websites/).\n\n<br>\n\n#### Estéticas\n\nOpciones referentes a diversos aspectos pero, en general, referentes a la estética (o theme) de la web. Documentación [aquí](https://quarto.org/docs/output-formats/html-basics.html)  y [aquí](https://quarto.org/docs/reference/formats/html.html).\n\nEstán son las opciones que he recopilado:\n\n\n::: {.cell}\n\n```{.r .cell-code .code-overflow-scroll  code-line-numbers=\"true\"}\n#- 3/ Opciones referentes al formato de salida  ---------------------\n#- HTML basics: https://quarto.org/docs/output-formats/html-basics.html\n#- HTML options: https://quarto.org/docs/reference/formats/html.html\n\nformat:\n  html:\n    #- https://quarto.org/docs/output-formats/html-themes.html\n    #theme:\n    #  light: [flatly, theme.scss]  \n    css: styles.css\n    toc: true\n    #- https://quarto.org/docs/output-formats/html-code.html#highlighting\n    highlight-style: a11y\n    code-copy: true\n    code-overflow: wrap\n    #include-after-body: js.html\n    theme:\n      light: flatly\n      dark: [darkly, theme-dark.scss]\n\n#- 4/ Más opciones  ----------------------------------------------------\nbibliography: references.bib\nfilters:\n  - filters/tools-tabset.lua\nfreeze: true\neditor: visual\n\ndescription: \"Un blog para aprender y divertirme\" #- necesario para RSS\n```\n:::\n\n<br>\n\n:::\n\n\n\n\n\n<br>\n\n--------------------------\n\n\n### Nivel carpeta\n\nEn realidad, las opciones que se pongan en el archivo `_metadata.ym` podrían perfectamente ir en `_quarto.yml` pero, el hecho de poder hacerlo indistintamente en ambos nos da más flexibilidad a la hora de hacer pequeñas adaptaciones de estilo para los archivos `.qmd` de una determinada carpeta.\n\nEstas son las opciones que he recopilado. Muchas de ellas (o todas) podrían ir perfectamente en el yaml del propio documento o incluso en el fichero `_quarto.yml`, pero al situarlas en el archivo `_metadata.yml` afectarán a todos los posts pero solo a los posts.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code .code-overflow-scroll  code-line-numbers=\"true\"}\n# options specified here will apply to all posts in this folder\n\n# freeze computational output\n# (see https://quarto.org/docs/projects/code-execution.html#freeze)\nfreeze: true\n\n\n# Enable banner style title blocks: https://quarto.org/docs/authoring/title-blocks.html\ntitle-block-banner: true      #- imagenes/economia.gif\n#title-block-style: default   #- {none, plain, default}\n#title-block-banner-color : \"#FFDDFF\"\n\n\n\n# Enable CC licence appendix\nlicense: \"CC BY\"\n\n# Default for table of contents\ntoc: true\ntoc-title: Índice\ntoc-location: left\n\n\n# Default knitr options\nexecute:\n  echo: true\n  message: false\n  warning: false\n  eval: true\n\n# Default author\nauthor:\n  - name: Pedro J. Pérez\n    #url: https://djnavarro.net\n    affiliation: Universitat de València\n    affiliation-url: https://www.uv.es\n    orcid: 0000-0001-9375-6330\n\n# Default fields for citation\ncitation: true\n\n# image as thumbnail\n# image: \"imagenes/thumbnail.png\"\n\n#- https://mine-cetinkaya-rundel.github.io/quarto-tip-a-day/posts/16-code-tools/\ncode-fold: true\ncode-tools: true\ncode-link: true\n\n#- https://quarto.org/docs/authoring/cross-references.html#options\ncrossref:\n  fig-title: Gráfico   # (default is \"Figure\")\n  tbl-title: Tabla     # (default is \"Table\")\n  #title-delim: —      # (default is \":\")\n```\n:::\n\n\n\n\n\n<br>\n\n--------------------------\n\n### Nivel documento\n\nEn el yaml del propio documento que genera un post se pueden introducir la mayoría de opciones de yaml pero parece lógico que los posts de un blog compartan estilo y, por tanto, las principales opciones del yaml creo que es mejor establcerlas a nivel de carpeta en `metadata.yml`. De esta forma, en el yaml del propio documento quedarían opciones como el título del post, categorías, fecha e imagen.\n\n\n::: {.cell}\n\n```{.r .cell-code .code-overflow-scroll  code-line-numbers=\"true\"}\n#- YAML de un post ------------------------------\n---\ntitle: \"Mi primer post con Quarto\"\nauthor: \"Pedro J. Pérez\"\ndate: 2022-10-25\ndate-format: short\ncategories: [R, quarto]\nimage: \"thumbnail.jpg\"\n---\n```\n:::\n\n\n\n\n\n\n<br>\n\n---------------------------\n\n<br>\n\n\n## `YAML` por categoría\n\n\nAhora mostraré opciones que podemos utilizar en el YAML para diferentes cuestiones:\n\n\n\n::: {.cell}\n\n```{.r .cell-code .code-overflow-scroll  code-line-numbers=\"true\"}\n#- formato de salida ---------------------------\nformat:\n  html:\n    #- https://quarto.org/docs/output-formats/html-themes.html\n    #theme:\n    #  light: [flatly, theme.scss]  \n    css: styles.css\n    toc: true\n    #- https://quarto.org/docs/output-formats/html-code.html#highlighting\n    highlight-style: a11y\n    code-copy: true\n    code-overflow: wrap\n    #include-after-body: js.html\n    theme:\n      light: flatly\n      dark: [darkly, theme-dark.scss]\n    linkcolor: \"red\"\n    monobackgroundcolor: \"green\" #- color de los cuadros de resultados de evaluar código\n    fontsize: 0.8em\n    linestretch: 1.3\n    \n#- opciones para TOC ---------------------------\ntoc: true\ntoc-title: Índice\ntoc-location: left\n\n# author ---------------------------------------\nauthor:\n  - name: Pedro J. Pérez\n    #url: https://\n    affiliation: Universitat de València\n    affiliation-url: https://www.uv.es\n    orcid: 0000-0001-9375-6330\n\n# opciones para chunks --------------------------\n# https://quarto.org/docs/computations/execution-options.html#output-options\nexecute:\n  echo: true    #- {true, false, fenced}\n  message: false\n  warning: false\n  eval: true\n\n\n#- opciones knitr ---------------------------------\n#- https://yihui.org/knitr/options/\nknitr:\n  opts_chunk: \n    collapse: true\n    comment: \"#>\" \n    R.options:\n      knitr.graphics.auto_pdf: true\n```\n:::\n\n\n\n<br>\n\n---------------------------\n\n## Listing pages\n\n\n::: {.cell}\n\n```{.r .cell-code .code-overflow-scroll  code-line-numbers=\"true\"}\n#- LISTING page -----------------------------\n\n---\ntitle: \"Mi listado de post\"\ndescription: |\n  Un blog para aprender y divertirme #- necesario para RSS (https://quarto.org/docs/websites/website-listings.html#feeds)\nlisting:\n  contents: posts\n  #- listing options: https://quarto.org/docs/websites/website-listings.html#listing-options\n  #- https://quarto.org/docs/websites/website-listings.html#sorting-items\n  sort: \"date desc\"\n  #-  https://quarto.org/docs/websites/website-listings.html#listing-types\n  type: default  #- {default, table, grid, custom}\n  categories: true\n  feed: false\n  sort-ui: false\n  filter-ui: false\n  fields: [image, date, title, description, categories, author, reading-time, file-modified]\n  field-display-names:\n    # title: \"Report\"\n    date_format: medium\n  image: imagenes/thumbnail.jpg\n  image-align: left\npage-layout: full         #- {article, full, custom}\n# title-block-banner: pone un banner en el title-block: pondrá el title, subtitle, description, y categories dentro del banner\n# https://quarto.org/docs/authoring/title-blocks.html\ntitle-block-banner: true  #- #- {true, false, \"#FFDDFF\",  \"image.jpg\"}\ntitle-block-style: default #- {default, plain, none}\ntitle-block-banner-color: red  #- {black, \"#FFDDFF\"} color del texto dentro del banner\nfeed: true   #- RSS: https://quarto.org/docs/websites/website-listings.html#feeds\n---\n```\n:::\n\n\nLa documentación oficial está [aquí](https://quarto.org/docs/websites/website-listings.html)\n\n\n\n\n<br>\n\n---------------------------\n\n## About pages\n\n::: {.cell}\n\n```{.r .cell-code .code-overflow-scroll  code-line-numbers=\"true\"}\n#- About page ---------------------------------\n#- Pages: https://quarto.org/docs/websites/website-about.html\n---\ntitle: Yo mismo\nimage: profile.jpg\nabout:\n  template: trestles    #- {jolla, solana, ...}\n  image-width: 10em     #- https://cybmeta.com/em-y-rem\n  image-shape: round    #- rectangle, round, rounded\n  links:\n    - icon: twitter\n      text: Twitter\n      href: https://twitter.com\n    - icon: linkedin\n      text: LinkedIn\n      href: https://linkedin.com\n    - icon: github\n      text: Github\n      href: https://github.com\n    - icon: envelope\n      text: email\n      url: \"mailto:<tu-mail@uv.es>\"\n---\n```\n:::\n\n\n\n\n<br><br>\n\n---------------------------\n\n## CSS\n\n\nLa apariencia visual del blog puede cambiarse utilizando CSS. El objetivo no es crear un tutorial sobre CSS, de hecho yo sé muy poquito CSS, sino solo **mostrar con un ejemplo cómo poder incorporar algunos cambios en nuestro blog mediante el uso de CSS**. Para ello he elaborado el siguiente [post](/posts/post_05_css-05.html)\n\n\nAlgunos recursos relacionados con CSS/html:\n\n  - [Slidecraft 101: Code and Output](https://www.emilhvitfeldt.com/post/slidecraft-code-output/)\n    \n  - [Slidecraft 101: Colors and Fonts](https://www.emilhvitfeldt.com/post/slidecraft-colors-fonts/)\n    \n  - [Business Reports with R Markdown: How to better theme report?](https://meetup-rmd-style-business-report.netlify.app/?panelset1=previous-css2#1)\n\n  - [Internet is hard](https://www.internetingishard.com/)  \n    \n  - [CSS basics] (https://developer.mozilla.org/en-US/docs/Learn/Getting_started_with_the_web/CSS_basics) y [Html basics](https://developer.mozilla.org/en-US/docs/Learn/Getting_started_with_the_web/HTML_basics) de Mozilla.   \n    \n  - Vídeo [HTML Crash Course For Absolute Beginners](https://www.youtube.com/watch?v=UB1O30fR-EE)   \n    \n  - [CSS tricks](https://css-tricks.com/guides/) y [Codepen](https://codepen.io/)\n    \n  - [Learn to Code HTML & CSS](https://learn.shayhowe.com/html-css/)\n    \n    \n\n\n<br>\n\n--------------------------\n\n\n## SASS\n\nSi sé muy poquito de CSS imaginaros cuanto sé de SASS. Pero allá vamos, anotaré aquí algunas que he medio aprendido.\n\nMuchos de los cambios que podemos hacer con SASS, con archivos `.scss`, también pueden hacerse desde los distintos YAML's de nuestro blog, [esta fantática slide](https://meetup-rmd-style-business-report.netlify.app/?panelset1=previous-css2#17) nos servirá de ejemplo.\n\n\nLa  [documentación oficial de Quarto](https://quarto.org/docs/output-formats/html-themes.html#overview) para **documentos html** sobre **como usar los themes y tunearlos con Sass**; además podemos encontrar [un listado de variables Sass](https://quarto.org/docs/output-formats/html-themes.html#sass-variables) y un [archivo `.scss`](https://github.com/twbs/bootstrap/blob/main/scss/_variables.scsss) donde ver todas las variables Sass usadas en los themes. [Aquí](https://github.com/quarto-dev/quarto-cli/tree/main/src/resources/formats/html/bootstrap/themes) puedes ver los ficheros `.scss` usados por los 25 25 built-in Bootswatch themes. [Aquí](https://quarto.org/docs/output-formats/html-themes-more.html) hay más información sobre el uso de Sass en Quarto. Para saber aún más, la web de Quarto nos redirige [aquí](https://getbootstrap.com/docs/5.1/customize/sass/).\n\n\nhttps://quarto.org/docs/output-formats/html-themes.html#overview\n\n\nPara las **slides en formato revealjs**: la  [documentación oficial de Quarto](https://quarto.org/docs/presentations/revealjs/themes.html#using-themes) sobre **como usar los themes y tunearlos con Sass**; además podemos encontrar un [listado con las variables Sass](https://quarto.org/docs/presentations/revealjs/themes.html#sass-variables) y un [listado de archivos .scss](https://github.com/quarto-dev/quarto-cli/tree/main/src/resources/formats/revealjs/themes) para revealjs slides.\n\n\n<br>\n\nAlgunas referencias sobre SASS:\n\n  - [Customizing Quarto Websites: Make your website stand out using SASS](https://ucsb-meds.github.io/customizing-quarto-websites/#/title-slide): unas slides de Sam Csik.\n    \n  - [Video tutorial de Albert Rapp](https://www.youtube.com/watch?v=ErRX8plZpQE). llegué a él gracias a [este post](https://www.ddanieltan.com/posts/blogtips/).\n\n  - En [este post](https://www.rstudio.com/blog/2021-spring-rmd-news/) de 2021 se anunciaba que se podía utilizar SASS en el entorno Rmarkdown gracias al paquete [sass](https://rstudio.github.io/sass/) y en su web se puede encontrar esta [vignette](https://rstudio.github.io/sass/articles/sass.html). \n    \n<br>\n    \n### \"Práctica\"\n\nSencillamente, para ver cómo es un archivo `.scss` vamos a ir al blog de [Danielle Navarro](https://blog.djnavarro.net/) y desde allí podemos dirigirnos al [repo del blog](https://github.com/djnavarro/quarto-blog) donde podemos ver su archivo [ember.scss](https://github.com/djnavarro/quarto-blog/blob/main/ember.scss). No es un archivo muy largo, simplemente coge el theme \"litera\" como base y ajusta un par de cosas como las fuentes. \n\nSi quisiéramos copiar/usar los ajustes de Danielle, sólo tendríamos que copiar su archivo en la carpeta raíz de nuestro blog y añadir en `_quarto.yml` la siguiente linea anidada en `format: html:`. Algo como esto:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nformat:\n  html:\n    theme: ember.scss\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}