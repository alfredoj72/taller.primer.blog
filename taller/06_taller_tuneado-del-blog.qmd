---
title: "Tuneado del blog"
subtitle: "(6ª parte del taller [Mi primer blog con Quarto](https://perezp44.github.io/taller.primer.blog/))"
title-block-banner: true
title-block-banner-color : "#562457"
toc-title: Tutorial nº 6
toc-depth: 4
---


{{< include ./_includes/_contexto.qmd >}}


::: {.callout-note collapse="true" appearance="default" icon="false"}
## Recapitulación
-   En esta sexta parte del taller veremos con un poco más de detalle como "mejorar" la apariencia de nuestro blog.

-   Las anteriores secciones del taller son:

    1. **Intro**: se presenta el taller

    2. **Creación de un blog (básico) con Quarto**: vimos como crear y alojar un **blog básico** con RStudio y Quarto.
    
    3. **Tuneado básico del blog**: modificamos ligeramente los ficheros `_quarto.yml`, `index.qmd`, `about.qmd` y `styles.css`.
    
    4. **Workflow: ¿cómo crear un post?**: vimos como generar nuevos posts para nuestro blog.
    
    5. **Escribiendo posts: prácticando con Quarto**. Vimos diversos elementos como div, call-outs etc... disponibles en Quarto para escribir posts.
:::


------------------------------------------------------------------------

<br>


{{< include ./_includes/_tt_06_01_q-haremos.qmd >}}

<br>

## Intro

Quarto  viene preparado con diferentes `Bootstrap themes` del  [proyecto Bootswatch project](https://bootswatch.com/) que le dan a nuestro blog una apariencia profesional y cuidada; pero claro, todos los blogs hechos con Quarto tendrán una a apariencia similar. ¿Cómo podemos tunear/modificar un poco la apariencia de nuestro blog?

En este tutorial trataremos de dar 3 posibilidades, aunque la verdad es que creo que es mejor comenzar con un blog sencillo usando las plantillas (o themes) que nos ofrece Quarto. Si aún así nos empeñamos en modificar la apariencia de nuestro blog, podemos hacerlo de 3 formas: 

  - utilizando las opciones disponibles en Quarto para el `yaml`
    
  - utilizando CSS
    
  - utilizando SASS

<br>    
    
## Opciones `YAML`

En esta sección repasaremos las opciones disponibles como opciones de `yaml`. Además recuerda que hay tres "niveles" de yaml: 

  2.1 **Nivel proyecto**: en el archivo `_quarto.yml`
  
  2.2 **Nivel carpeta**: en el archivo `_metadata.yml`
  
  2.3 **Nivel documento** (o post): en el yaml del propio documento `.qmd`

<br>

-----------------------
  
### Nivel proyecto

En el archivo `_quarto.yml` hay 3 bloques: 

  - Opciones referentes al proyecto
  
  - Opciones referentes a la estructura de la web y barra de navegación
  
  - Opciones digamos más "estéticas"

<br>



{{< include ./_includes/_tt_06_02b_yaml-proyecto-tabset.qmd >}}



<br>

--------------------------


### Nivel carpeta

En realidad, las opciones que se pongan en el archivo `_metadata.ym` podrían perfectamente ir en `_quarto.yml` pero, el hecho de poder hacerlo indistintamente en ambos nos da más flexibilidad a la hora de hacer pequeñas adaptaciones de estilo para los archivos `.qmd` de una determinada carpeta.

Estas son las opciones que he recopilado. Muchas de ellas (o todas) podrían ir perfectamente en el yaml del propio documento o incluso en el fichero `_quarto.yml`, pero al situarlas en el archivo `_metadata.yml` afectarán a todos los posts pero solo a los posts.




{{< include ./_includes/_tt_06_03_yaml-carpeta-01.qmd >}}



<br>

--------------------------

### Nivel documento

{{< include ./_includes/_tt_06_04_yaml-documento-01.qmd >}}




<br>

---------------------------

<br>


## `YAML` por categoría


Ahora mostraré opciones que podemos utilizar en el YAML para diferentes cuestiones:



{{< include ./_includes/_tt_06_04_yaml-por-categoria-01.qmd >}}

<br>

---------------------------

## Listing pages


{{< include ./_includes/_tt_06_05_yaml-listing-pages.qmd >}}


<br>

---------------------------

## About pages

{{< include ./_includes/_tt_06_06_yaml-about-pages.qmd >}}


<br><br>

---------------------------

## CSS


La apariencia visual del blog puede cambiarse utilizando CSS. El objetivo no es crear un tutorial sobre CSS, de hecho mis conocimientos de CSS son limitados, sino solo **mostrar con un ejemplo cómo poder incorporar algunos cambios en nuestro blog mediante el uso de CSS**. Para ello he elaborado el siguiente [post](/posts/post_05_css-05.html)


Algunos recursos relacionados con CSS/html:

  - [Slidecraft 101: Code and Output](https://www.emilhvitfeldt.com/post/slidecraft-code-output/)
    
  - [Slidecraft 101: Colors and Fonts](https://www.emilhvitfeldt.com/post/slidecraft-colors-fonts/)
    
  - [Business Reports with R Markdown: How to better theme report?](https://meetup-rmd-style-business-report.netlify.app/?panelset1=previous-css2#1)

  - [Internet is hard](https://www.internetingishard.com/)  
    
  - [CSS basics] (https://developer.mozilla.org/en-US/docs/Learn/Getting_started_with_the_web/CSS_basics) y [Html basics](https://developer.mozilla.org/en-US/docs/Learn/Getting_started_with_the_web/HTML_basics) de Mozilla.   
    
  - Vídeo [HTML Crash Course For Absolute Beginners](https://www.youtube.com/watch?v=UB1O30fR-EE)   
    
  - [CSS tricks](https://css-tricks.com/guides/) y [Codepen](https://codepen.io/)
    
  - [Learn to Code HTML & CSS](https://learn.shayhowe.com/html-css/)
    
  - [Bootstrap CSS grid](https://getbootstrap.com/docs/5.1/layout/css-grid/) para [layout's complejos](https://quarto.org/docs/output-formats/page-layout.html#css-grid)


<br>

--------------------------


## SASS

Recordar que muchos de los cambios que podemos hacer con SASS, con archivos `.scss`, también pueden hacerse desde los distintos YAML's de nuestro blog, [esta fantástica slide](https://meetup-rmd-style-business-report.netlify.app/?panelset1=previous-css2#17) nos sirve de ejemplo.


La  [documentación oficial de Quarto](https://quarto.org/docs/output-formats/html-themes.html#overview) para **documentos html** sobre **como usar los themes y tunearlos con Sass**; además podemos encontrar [un listado de variables Sass](https://quarto.org/docs/output-formats/html-themes.html#sass-variables) y un [archivo `.scss`](https://github.com/twbs/bootstrap/blob/main/scss/_variables.scsss) donde ver todas las variables Sass usadas en los themes. [Aquí](https://github.com/quarto-dev/quarto-cli/tree/main/src/resources/formats/html/bootstrap/themes) puedes ver los ficheros `.scss` usados por los 25 built-in Bootswatch themes. [Aquí](https://quarto.org/docs/output-formats/html-themes-more.html) hay más información sobre el uso de Sass en Quarto. Para saber aún más, la web de Quarto nos redirige [aquí](https://getbootstrap.com/docs/5.1/customize/sass/).




Para las **slides en formato revealjs**: la  [documentación oficial de Quarto](https://quarto.org/docs/presentations/revealjs/themes.html#using-themes) sobre **como usar los themes y tunearlos con Sass**; además podemos encontrar un [listado con las variables Sass](https://quarto.org/docs/presentations/revealjs/themes.html#sass-variables) y un [listado de archivos .scss](https://github.com/quarto-dev/quarto-cli/tree/main/src/resources/formats/revealjs/themes) para revealjs slides.


<br>

Algunas referencias sobre SASS:

  - [Customizing Quarto Websites: Make your website stand out using SASS](https://ucsb-meds.github.io/customizing-quarto-websites/#/title-slide): unas slides de Sam Csik.
    
  - [Video tutorial de Albert Rapp](https://www.youtube.com/watch?v=ErRX8plZpQE). llegué a él gracias a [este post](https://www.ddanieltan.com/posts/blogtips/).

  - En [este post](https://www.rstudio.com/blog/2021-spring-rmd-news/) de 2021 se anunciaba que se podía utilizar SASS en el entorno Rmarkdown gracias al paquete [sass](https://rstudio.github.io/sass/) y en su web se puede encontrar esta [vignette](https://rstudio.github.io/sass/articles/sass.html). 
    
<br>
    
### "Práctica"

Sencillamente, para ver cómo es un archivo `.scss` vamos a ir al blog de [Danielle Navarro](https://blog.djnavarro.net/) y desde allí podemos dirigirnos al [repo del blog](https://github.com/djnavarro/quarto-blog) donde podemos ver su archivo [ember.scss](https://github.com/djnavarro/quarto-blog/blob/main/ember.scss). No es un archivo muy largo, simplemente coge el theme "litera" como base y ajusta un par de cosas como las fuentes. 

Si quisiéramos copiar/usar los ajustes de Danielle, sólo tendríamos que copiar su archivo en la carpeta raíz de nuestro blog y añadir en `_quarto.yml` la siguiente linea anidada en `format: html:`. Algo como esto:


```{r, eval = FALSE}
format:
  html:
    theme: ember.scss
```

